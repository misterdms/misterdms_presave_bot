"""
Modules/user_management/__init__.py - –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥—É–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
Do Presave Reminder Bot v29.07

–ú–û–î–£–õ–¨ 1: –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏-–º—É–∑—ã–∫–∞–Ω—Ç–∞–º–∏, —Å–∏—Å—Ç–µ–º–∞ –∫–∞—Ä–º—ã, –∑–≤–∞–Ω–∏—è, –æ–Ω–±–æ—Ä–¥–∏–Ω–≥
–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: 1 (–∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–Ω—ã–π)
"""

from .module import UserManagementModule
from .models import MusicUser, KarmaHistory
from .services import UserService
from .handlers import UserManagementHandlers
from .validators import (
    UserDataValidator, 
    KarmaValidator, 
    OnboardingValidator,
    validate_user_input,
    sanitize_username,
    sanitize_name,
    sanitize_genre
)
from .config import (
    UserManagementConfig,
    KarmaConfig,
    RankConfig,
    OnboardingConfig,
    ValidationConfig,
    WebAppConfig,
    # –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã
    COMMAND_START,
    COMMAND_MYSTAT,
    COMMAND_PROFILE,
    COMMAND_KARMA_HISTORY,
    COMMAND_KARMA,
    COMMAND_KARMA_RATIO,
    EVENT_USER_REGISTERED,
    EVENT_KARMA_CHANGED,
    EVENT_RANK_CHANGED,
    EVENT_ONBOARDING_COMPLETED
)

# –í–µ—Ä—Å–∏—è –º–æ–¥—É–ª—è
__version__ = "1.0.0"

# –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–æ–¥—É–ª–µ
__module_info__ = {
    "name": "user_management",
    "version": __version__,
    "description": "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏, –∫–∞—Ä–º–∞, –∑–≤–∞–Ω–∏—è, –æ–Ω–±–æ—Ä–¥–∏–Ω–≥",
    "author": "Mister DMS",
    "plan": 1,
    "priority": 1,
    "dependencies": [],
    "commands": [
        COMMAND_START,
        COMMAND_MYSTAT,
        COMMAND_PROFILE,
        COMMAND_KARMA_HISTORY,
        COMMAND_KARMA,
        COMMAND_KARMA_RATIO
    ],
    "events": [
        EVENT_USER_REGISTERED,
        EVENT_KARMA_CHANGED,
        EVENT_RANK_CHANGED,
        EVENT_ONBOARDING_COMPLETED
    ],
    "webapp_integration": True,
    "database_tables": ["music_users", "karma_history"]
}

# –≠–∫—Å–ø–æ—Ä—Ç –æ—Å–Ω–æ–≤–Ω—ã—Ö –∫–ª–∞—Å—Å–æ–≤ –∏ —Ñ—É–Ω–∫—Ü–∏–π
__all__ = [
    # –û—Å–Ω–æ–≤–Ω–æ–π –º–æ–¥—É–ª—å
    'UserManagementModule',
    
    # –ú–æ–¥–µ–ª–∏ –¥–∞–Ω–Ω—ã—Ö
    'MusicUser',
    'KarmaHistory',
    
    # –°–µ—Ä–≤–∏—Å—ã
    'UserService',
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    'UserManagementHandlers',
    
    # –í–∞–ª–∏–¥–∞—Ç–æ—Ä—ã
    'UserDataValidator',
    'KarmaValidator',
    'OnboardingValidator',
    'validate_user_input',
    'sanitize_username',
    'sanitize_name',
    'sanitize_genre',
    
    # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
    'UserManagementConfig',
    'KarmaConfig',
    'RankConfig',
    'OnboardingConfig',
    'ValidationConfig',
    'WebAppConfig',
    
    # –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –∫–æ–º–∞–Ω–¥
    'COMMAND_START',
    'COMMAND_MYSTAT',
    'COMMAND_PROFILE',
    'COMMAND_KARMA_HISTORY',
    'COMMAND_KARMA',
    'COMMAND_KARMA_RATIO',
    
    # –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã —Å–æ–±—ã—Ç–∏–π
    'EVENT_USER_REGISTERED',
    'EVENT_KARMA_CHANGED',
    'EVENT_RANK_CHANGED',
    'EVENT_ONBOARDING_COMPLETED',
    
    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–æ–¥—É–ª–µ
    '__version__',
    '__module_info__'
]


def get_module_info():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –º–æ–¥—É–ª–µ"""
    return __module_info__.copy()


def get_module_class():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –∫–ª–∞—Å—Å–∞ –º–æ–¥—É–ª—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏"""
    return UserManagementModule


def validate_module_dependencies():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –º–æ–¥—É–ª—è"""
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –±–∏–±–ª–∏–æ—Ç–µ–∫
    required_packages = [
        'sqlalchemy',
        'psycopg2',
        'pydantic'
    ]
    
    missing_packages = []
    for package in required_packages:
        try:
            __import__(package.replace('-', '_'))
        except ImportError:
            missing_packages.append(package)
    
    if missing_packages:
        raise ImportError(f"–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–∞–∫–µ—Ç—ã: {', '.join(missing_packages)}")
    
    return True


def get_module_stats():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –º–æ–¥—É–ª—è"""
    return {
        "version": __version__,
        "commands_count": len(__module_info__["commands"]),
        "events_count": len(__module_info__["events"]),
        "tables_count": len(__module_info__["database_tables"]),
        "has_webapp": __module_info__["webapp_integration"],
        "plan": __module_info__["plan"],
        "priority": __module_info__["priority"]
    }


# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥—É–ª—è –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ
if __name__ != "__main__":
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ –∫–∞–∫ –º–æ–¥—É–ª—å
    try:
        validate_module_dependencies()
    except ImportError as e:
        import logging
        logger = logging.getLogger(__name__)
        logger.warning(f"‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º—ã —Å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è–º–∏ –º–æ–¥—É–ª—è user_management: {e}")


if __name__ == "__main__":
    # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–¥—É–ª—è –ø—Ä–∏ –ø—Ä—è–º–æ–º –∑–∞–ø—É—Å–∫–µ
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–¥—É–ª—è user_management...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    try:
        validate_module_dependencies()
        print("‚úÖ –í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –Ω–∞–π–¥–µ–Ω—ã")
    except ImportError as e:
        print(f"‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è–º–∏: {e}")
    
    # –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–æ–¥—É–ª–µ
    info = get_module_info()
    print(f"\nüì¶ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–æ–¥—É–ª–µ:")
    for key, value in info.items():
        print(f"  {key}: {value}")
    
    # –í—ã–≤–æ–¥–∏–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    stats = get_module_stats()
    print(f"\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –º–æ–¥—É–ª—è:")
    for key, value in stats.items():
        print(f"  {key}: {value}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º–æ–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    try:
        config = UserManagementConfig()
        is_valid, errors = config.validate_config()
        print(f"\n‚öôÔ∏è –í–∞–ª–∏–¥–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {'‚úÖ' if is_valid else '‚ùå'}")
        if errors:
            for error in errors:
                print(f"  - {error}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
    
    print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–¥—É–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ")
    print(f"üöÄ –ú–æ–¥—É–ª—å {info['name']} v{info['version']} –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!")
