"""
–ü–õ–ê–ù 4: –°–∏—Å—Ç–µ–º–∞ backup/restore –¥–ª—è –æ–±—Ö–æ–¥–∞ 30-–¥–Ω–µ–≤–Ω–æ–≥–æ –ª–∏–º–∏—Ç–∞ PostgreSQL
Do Presave Reminder Bot v27.1+

–°–¢–ê–¢–£–°: –í –†–ê–ó–†–ê–ë–û–¢–ö–ï (–ó–ê–ì–õ–£–®–ö–ê)
–ê–ö–¢–ò–í–ê–¶–ò–Ø: ENABLE_PLAN_4_FEATURES=true (–≤–∫–ª—é—á–µ–Ω –≤—Å–µ–≥–¥–∞!)
"""

import os
from datetime import datetime, timedelta
from typing import Optional, Dict, Any, Tuple
from io import BytesIO
from utils.logger import get_logger

logger = get_logger(__name__)

# ============================================
# –ó–ê–ì–õ–£–®–ö–ò –î–õ–Ø –ü–õ–ê–ù–ê 4 (BACKUP –°–ò–°–¢–ï–ú–ê)
# ============================================

class BackupRestoreManager:
    """–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ backup –∏ restore –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    
    def __init__(self, db_manager=None):
        # self.db_manager = db_manager
        # self.backup_filename = f"presave_bot_backup_{datetime.now().strftime('%Y%m%d_%H%M%S')}"
        logger.info("üíæ BackupRestoreManager –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω (–ó–ê–ì–õ–£–®–ö–ê)")
    
    def get_database_age_days(self) -> int:
        """–ü–æ–ª—É—á–∏—Ç—å –≤–æ–∑—Ä–∞—Å—Ç –ë–î –≤ –¥–Ω—è—Ö"""
        created_date = os.getenv('DATABASE_CREATED_DATE')
        if not created_date:
            logger.warning("üìÖ DATABASE_CREATED_DATE –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞, —Å—á–∏—Ç–∞–µ–º 0 –¥–Ω–µ–π")
            return 0
            
        try:
            created = datetime.strptime(created_date, '%Y-%m-%d')
            age_days = (datetime.now() - created).days
            logger.info(f"üìä –í–æ–∑—Ä–∞—Å—Ç –ë–î: {age_days} –¥–Ω–µ–π")
            return age_days
        except ValueError:
            logger.error(f"‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç DATABASE_CREATED_DATE: {created_date}")
            return 0
    
    def should_backup_soon(self) -> bool:
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω—É–∂–Ω–æ—Å—Ç–∏ backup (25+ –¥–Ω–µ–π)"""
        return self.get_database_age_days() >= 25
    
    def days_until_expiry(self) -> int:
        """–î–Ω–µ–π –¥–æ –∏—Å—Ç–µ—á–µ–Ω–∏—è –ë–î"""
        return max(0, 30 - self.get_database_age_days())
    
    # def export_full_database(self) -> Tuple[BytesIO, str]:
    #     """
    #     –ü–æ–ª–Ω—ã–π —ç–∫—Å–ø–æ—Ä—Ç –ë–î –≤ JSON + SQL —Ñ–æ—Ä–º–∞—Ç–µ
    #     –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç: (file_buffer, filename)
    #     """
    #     pass
    
    # def import_database(self, zip_file_path: str) -> bool:
    #     """
    #     –ò–º–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –∏–∑ backup –∞—Ä—Ö–∏–≤–∞
    #     """
    #     pass
    
    # def create_backup_metadata(self) -> Dict[str, Any]:
    #     """–°–æ–∑–¥–∞–Ω–∏–µ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö backup"""
    #     pass
    
    # def validate_backup_file(self, zip_file_path: str) -> bool:
    #     """–í–∞–ª–∏–¥–∞—Ü–∏—è backup —Ñ–∞–π–ª–∞"""
    #     pass

class BackupScheduler:
    """–ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ backup"""
    
    def __init__(self, bot=None):
        # self.bot = bot
        # self.backup_manager = None
        logger.info("‚è∞ BackupScheduler –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω (–ó–ê–ì–õ–£–®–ö–ê)")
    
    # def start_scheduler(self):
    #     """–ó–∞–ø—É—Å–∫ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞"""
    #     pass
    
    # def check_backup_status(self):
    #     """–ï–∂–µ–¥–Ω–µ–≤–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ backup"""
    #     pass
    
    # def send_backup_warning(self, days_left: int):
    #     """–û—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –æ backup"""
    #     pass

# –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –º–µ–Ω–µ–¥–∂–µ—Ä—ã
backup_manager = None
backup_scheduler = None

def init_backup_manager(db_manager=None):
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞ backup"""
    global backup_manager
    
    # –ü–õ–ê–ù 4 –≤—Å–µ–≥–¥–∞ –≤–∫–ª—é—á–µ–Ω –∏–∑-–∑–∞ –∫—Ä–∏—Ç–∏—á–Ω–æ—Å—Ç–∏!
    logger.info("üîÑ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è backup —Å–∏—Å—Ç–µ–º—ã...")
    backup_manager = BackupRestoreManager(db_manager)
    logger.info("‚úÖ Backup —Å–∏—Å—Ç–µ–º–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")

def init_backup_scheduler(bot=None):
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ backup"""
    global backup_scheduler
    
    logger.info("üîÑ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ backup...")
    backup_scheduler = BackupScheduler(bot)
    logger.info("‚úÖ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ backup –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")

def get_backup_manager() -> Optional[BackupRestoreManager]:
    """–ü–æ–ª—É—á–∏—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä backup"""
    return backup_manager

def get_backup_scheduler() -> Optional[BackupScheduler]:
    """–ü–æ–ª—É—á–∏—Ç—å –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ backup"""
    return backup_scheduler

# ============================================
# –ö–û–ú–ê–ù–î–´ BACKUP (–ó–ê–ì–õ–£–®–ö–ò)
# ============================================

async def handle_backup_download_command(user_id: int) -> Tuple[str, Optional[BytesIO]]:
    """
    –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /downloadsql
    
    Returns:
        Tuple[str, Optional[BytesIO]]: (—Å–æ–æ–±—â–µ–Ω–∏–µ, —Ñ–∞–π–ª backup –∏–ª–∏ None)
    """
    # –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è backup
    message = "üíæ –ö–æ–º–∞–Ω–¥–∞ /downloadsql –ø–æ–∫–∞ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ (–ü–õ–ê–ù 4)\n\n"
    message += "üöß –°–∫–æ—Ä–æ –≤—ã —Å–º–æ–∂–µ—Ç–µ:\n"
    message += "‚Ä¢ –°–∫–∞—á–∞—Ç—å –ø–æ–ª–Ω—ã–π backup –ë–î –≤ ZIP\n"
    message += "‚Ä¢ –ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—é\n"
    message += "‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –º–∏–≥—Ä–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ –Ω–æ–≤—É—é –ë–î"
    
    return message, None

async def handle_backup_status_command(user_id: int) -> str:
    """
    –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /backupstatus
    
    Returns:
        str: –°—Ç–∞—Ç—É—Å backup —Å–∏—Å—Ç–µ–º—ã
    """
    if backup_manager:
        age_days = backup_manager.get_database_age_days()
        days_left = backup_manager.days_until_expiry()
        
        message = f"üìä **–°—Ç–∞—Ç—É—Å –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö**\n\n"
        message += f"üìÖ –í–æ–∑—Ä–∞—Å—Ç –ë–î: {age_days} –¥–Ω–µ–π\n"
        message += f"‚è∞ –î–æ –∏—Å—Ç–µ—á–µ–Ω–∏—è: {days_left} –¥–Ω–µ–π\n\n"
        
        if days_left <= 5:
            message += "üö® **–ö–†–ò–¢–ò–ß–ù–û!** –¢—Ä–µ–±—É–µ—Ç—Å—è —Å—Ä–æ—á–Ω—ã–π backup!"
        elif days_left <= 10:
            message += "‚ö†Ô∏è **–í–ù–ò–ú–ê–ù–ò–ï!** –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —Å–¥–µ–ª–∞—Ç—å backup"
        else:
            message += "‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≤ –Ω–æ—Ä–º–∞–ª—å–Ω–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏"
            
        message += f"\n\nüíæ Backup —Å–∏—Å—Ç–µ–º–∞: –ü–õ–ê–ù 4 (–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)"
        return message
    
    return "‚ùå Backup —Å–∏—Å—Ç–µ–º–∞ –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞"

async def handle_backup_help_command(user_id: int) -> str:
    """
    –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /backuphelp
    
    Returns:
        str: –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ backup
    """
    message = "üíæ **–°–∏—Å—Ç–µ–º–∞ Backup/Restore (–ü–õ–ê–ù 4)**\n\n"
    message += "üéØ **–¶–µ–ª—å:** –û–±—Ö–æ–¥ 30-–¥–Ω–µ–≤–Ω–æ–≥–æ –ª–∏–º–∏—Ç–∞ PostgreSQL –Ω–∞ Render.com\n\n"
    message += "üìã **–ö–æ–º–∞–Ω–¥—ã:**\n"
    message += "‚Ä¢ `/downloadsql` - —Å–∫–∞—á–∞—Ç—å –ø–æ–ª–Ω—ã–π backup –ë–î\n"
    message += "‚Ä¢ `/backupstatus` - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –ë–î\n"
    message += "‚Ä¢ `/backuphelp` - —ç—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞\n\n"
    message += "üîÑ **–ü—Ä–æ—Ü–µ—Å—Å –º–∏–≥—Ä–∞—Ü–∏–∏:**\n"
    message += "1. –°–∫–∞—á–∏–≤–∞–µ—Ç–µ backup –¥–æ –∏—Å—Ç–µ—á–µ–Ω–∏—è 30 –¥–Ω–µ–π\n"
    message += "2. –°–æ–∑–¥–∞–µ—Ç–µ –Ω–æ–≤—É—é –ë–î –Ω–∞ Render.com\n"
    message += "3. –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç–µ backup —Ñ–∞–π–ª –±–æ—Ç—É\n"
    message += "4. –ë–æ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –≤—Å–µ –¥–∞–Ω–Ω—ã–µ\n\n"
    message += "‚ö†Ô∏è **–°—Ç–∞—Ç—É—Å:** –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ (–ü–õ–ê–ù 4)\n"
    message += "üìÖ **–ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å:** –ù–æ—è–±—Ä—å-–î–µ–∫–∞–±—Ä—å 2025"
    
    return message

# ============================================
# –ú–û–ù–ò–¢–û–†–ò–ù–ì BACKUP (–ó–ê–ì–õ–£–®–ö–ò)
# ============================================

def get_backup_warnings() -> list:
    """–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π –æ backup"""
    warnings = []
    
    if backup_manager:
        age_days = backup_manager.get_database_age_days()
        warning_days = [25, 28, 30, 44]  # –ò–∑ environment variables
        
        for warning_day in warning_days:
            if age_days >= warning_day:
                warnings.append({
                    'day': warning_day,
                    'message': f'–ë–î –¥–æ—Å—Ç–∏–≥–ª–∞ {warning_day} –¥–Ω–µ–π',
                    'severity': 'critical' if warning_day >= 30 else 'warning'
                })
    
    return warnings

def format_backup_warning(warning: Dict[str, Any]) -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –æ backup"""
    emoji = "üö®" if warning['severity'] == 'critical' else "‚ö†Ô∏è"
    return f"{emoji} {warning['message']}"

# ============================================
# –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò (–ó–ê–ì–õ–£–®–ö–ò)
# ============================================

def is_backup_enabled() -> bool:
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∫–ª—é—á–µ–Ω–∏—è backup —Å–∏—Å—Ç–µ–º—ã"""
    return os.getenv('AUTO_BACKUP_ENABLED', 'true').lower() == 'true'

def is_backup_notifications_enabled() -> bool:
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∫–ª—é—á–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π backup"""
    return os.getenv('BACKUP_NOTIFICATIONS_ENABLED', 'true').lower() == 'true'

def get_backup_check_time() -> str:
    """–ü–æ–ª—É—á–∏—Ç—å –≤—Ä–µ–º—è –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ backup"""
    return os.getenv('BACKUP_CHECK_TIME', '10:00')

def validate_backup_file_size(file_size: int) -> bool:
    """–í–∞–ª–∏–¥–∞—Ü–∏—è —Ä–∞–∑–º–µ—Ä–∞ backup —Ñ–∞–π–ª–∞"""
    max_size_mb = int(os.getenv('BACKUP_MAX_SIZE_MB', '45'))
    max_size_bytes = max_size_mb * 1024 * 1024
    return file_size <= max_size_bytes