"""
üéõÔ∏è Menu System - Do Presave Reminder Bot v25+
–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –º–µ–Ω—é —Å –Ω–∞–≤–∏–≥–∞—Ü–∏–µ–π –¥–ª—è –≤—Å–µ—Ö –ø–ª–∞–Ω–æ–≤ —Ä–∞–∑–≤–∏—Ç–∏—è
"""

from typing import Optional, Dict, Any, List, Tuple
import telebot
from telebot.types import Message, CallbackQuery, InlineKeyboardMarkup

from config import config
from database.manager import get_database_manager
from utils.security import admin_required, security_manager, AccessDeniedError
from utils.logger import get_logger, telegram_logger
from utils.helpers import (
    MessageFormatter, KeyboardBuilder, UserHelper, 
    DataHelper, ConfigHelper
)

logger = get_logger(__name__)

class MenuManager:
    """–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä —Å–∏—Å—Ç–µ–º—ã –º–µ–Ω—é"""
    
    def __init__(self, bot: telebot.TeleBot):
        self.bot = bot
        self.db = get_database_manager()
        
        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
        self._register_handlers()
        
        logger.info("üéõÔ∏è Menu Manager –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
    
    def _register_handlers(self):
        """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤—Å–µ—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –º–µ–Ω—é"""
        
        # –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –º–µ–Ω—é
        @self.bot.message_handler(commands=['menu'])
        @admin_required
        def handle_menu_command(message: Message):
            self.show_main_menu(message)
        
        @self.bot.message_handler(commands=['resetmenu'])
        @admin_required
        def handle_reset_menu_command(message: Message):
            self.reset_menu(message)
        
        @self.bot.message_handler(commands=['help'])
        def handle_help_command(message: Message):
            self.show_help(message)
        
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ callback'–æ–≤ –º–µ–Ω—é
        @self.bot.callback_query_handler(func=lambda call: call.data.startswith('menu_'))
        def handle_menu_callbacks(call: CallbackQuery):
            self.handle_menu_callback(call)
        
        @self.bot.callback_query_handler(func=lambda call: call.data.startswith('leaderboard_'))
        def handle_leaderboard_callbacks(call: CallbackQuery):
            self.handle_leaderboard_callback(call)
        
        @self.bot.callback_query_handler(func=lambda call: call.data.startswith('action_'))
        def handle_action_callbacks(call: CallbackQuery):
            self.handle_action_callback(call)
        
        @self.bot.callback_query_handler(func=lambda call: call.data.startswith('settings_'))
        def handle_settings_callbacks(call: CallbackQuery):
            self.handle_settings_callback(call)
        
        @self.bot.callback_query_handler(func=lambda call: call.data.startswith('limits_'))
        def handle_limits_callbacks(call: CallbackQuery):
            self.handle_limits_callback(call)
        
        @self.bot.callback_query_handler(func=lambda call: call.data == 'under_development')
        def handle_under_development(call: CallbackQuery):
            self.show_under_development(call)
    
    # ============================================
    # –û–°–ù–û–í–ù–´–ï –§–£–ù–ö–¶–ò–ò –ú–ï–ù–Æ
    # ============================================
    
    @admin_required
    def show_main_menu(self, message_or_call, edit_message: bool = False):
        """–ü–æ–∫–∞–∑ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤)"""
        try:
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –æ–±—ä–µ–∫—Ç–∞
            if isinstance(message_or_call, CallbackQuery):
                user_id = message_or_call.from_user.id
                chat_id = message_or_call.message.chat.id
                message_id = message_or_call.message.message_id
                edit_message = True
            else:
                user_id = message_or_call.from_user.id
                chat_id = message_or_call.chat.id
                message_id = None
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∞
            if not security_manager.is_admin(user_id):
                error_text = f"{MessageFormatter.get_emoji('error')} –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω!\n\n" \
                           f"–ú–µ–Ω—é –¥–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º."
                
                if edit_message and message_id:
                    self.bot.edit_message_text(error_text, chat_id, message_id)
                else:
                    self.bot.send_message(chat_id, error_text)
                return
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –º–µ–Ω—é
            menu_text = self._generate_main_menu_text()
            
            # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
            keyboard = KeyboardBuilder.create_main_menu_keyboard()
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–ª–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º
            if edit_message and message_id:
                self.bot.edit_message_text(
                    menu_text, 
                    chat_id, 
                    message_id,
                    parse_mode='Markdown',
                    reply_markup=keyboard
                )
            else:
                self.bot.send_message(
                    chat_id,
                    menu_text,
                    parse_mode='Markdown',
                    reply_markup=keyboard
                )
            
            telegram_logger.admin_action(user_id, "–æ—Ç–∫—Ä—ã–ª –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–∫–∞–∑–∞ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é: {e}")
            self._send_error_message(message_or_call, "–û—à–∏–±–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –º–µ–Ω—é")
    
    def _generate_main_menu_text(self) -> str:
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–∞ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é"""
        text = f"{MessageFormatter.get_emoji('menu')} **–ì–õ–ê–í–ù–û–ï –ú–ï–ù–Æ**\n\n"
        
        # –°—Ç–∞—Ç—É—Å –±–æ—Ç–∞
        bot_enabled = ConfigHelper.is_bot_enabled()
        status_emoji = MessageFormatter.get_emoji('success' if bot_enabled else 'error')
        status_text = "–ê–∫—Ç–∏–≤–µ–Ω" if bot_enabled else "–î–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω"
        text += f"{status_emoji} **–°—Ç–∞—Ç—É—Å –±–æ—Ç–∞:** {status_text}\n"
        
        # –¢–µ–∫—É—â–∏–π —Ä–µ–∂–∏–º –ª–∏–º–∏—Ç–æ–≤
        current_mode = ConfigHelper.get_current_limit_mode()
        text += f"{MessageFormatter.get_emoji('system')} **–†–µ–∂–∏–º –ª–∏–º–∏—Ç–æ–≤:** {current_mode}\n"
        
        # –í–∫–ª—é—á–µ–Ω–Ω—ã–µ –ø–ª–∞–Ω—ã
        text += f"\n{MessageFormatter.get_emoji('info')} **–ê–∫—Ç–∏–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:**\n"
        text += f"‚Ä¢ {MessageFormatter.get_emoji('success')} –ü–ª–∞–Ω 1: –ë–∞–∑–æ–≤—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª\n"
        
        if config.ENABLE_PLAN_2_FEATURES:
            text += f"‚Ä¢ {MessageFormatter.get_emoji('success')} –ü–ª–∞–Ω 2: –°–∏—Å—Ç–µ–º–∞ –∫–∞—Ä–º—ã\n"
        else:
            text += f"‚Ä¢ {MessageFormatter.get_emoji('loading')} –ü–ª–∞–Ω 2: –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ\n"
        
        if config.ENABLE_PLAN_3_FEATURES:
            text += f"‚Ä¢ {MessageFormatter.get_emoji('success')} –ü–ª–∞–Ω 3: –ò–ò –∏ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ —Ñ–æ—Ä–º—ã\n"
        else:
            text += f"‚Ä¢ {MessageFormatter.get_emoji('loading')} –ü–ª–∞–Ω 3: –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ\n"
        
        if config.ENABLE_PLAN_4_FEATURES:
            text += f"‚Ä¢ {MessageFormatter.get_emoji('success')} –ü–ª–∞–Ω 4: Backup —Å–∏—Å—Ç–µ–º–∞\n"
        else:
            text += f"‚Ä¢ {MessageFormatter.get_emoji('loading')} –ü–ª–∞–Ω 4: –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ\n"
        
        text += f"\n{MessageFormatter.get_emoji('info')} –í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è:"
        
        return text
    
    @admin_required 
    def reset_menu(self, message: Message):
        """–°–±—Ä–æ—Å –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –º–µ–Ω—é"""
        try:
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Å–±—Ä–æ—Å–µ
            reset_text = f"{MessageFormatter.get_emoji('loading')} –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã –º–µ–Ω—é...\n\n" \
                        f"{MessageFormatter.get_emoji('success')} –í—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!\n" \
                        f"{MessageFormatter.get_emoji('info')} –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã."
            
            self.bot.send_message(
                message.chat.id,
                reset_text,
                parse_mode='Markdown'
            )
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
            self.show_main_menu(message)
            
            telegram_logger.admin_action(
                message.from_user.id, 
                "–≤—ã–ø–æ–ª–Ω–∏–ª —Å–±—Ä–æ—Å –º–µ–Ω—é"
            )
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Å–±—Ä–æ—Å–∞ –º–µ–Ω—é: {e}")
            self._send_error_message(message, "–û—à–∏–±–∫–∞ —Å–±—Ä–æ—Å–∞ –º–µ–Ω—é")
    
    def show_help(self, message: Message):
        """–ü–æ–∫–∞–∑ —Å–ø—Ä–∞–≤–∫–∏ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º"""
        try:
            help_text = self._generate_help_text(message.from_user.id)
            
            # –†–∞–∑–±–∏–≤–∞–µ–º –Ω–∞ —á–∞—Å—Ç–∏ –µ—Å–ª–∏ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ
            max_length = 4000
            if len(help_text) > max_length:
                parts = [help_text[i:i+max_length] for i in range(0, len(help_text), max_length)]
                for i, part in enumerate(parts):
                    if i == 0:
                        self.bot.send_message(message.chat.id, part, parse_mode='Markdown')
                    else:
                        self.bot.send_message(message.chat.id, f"*–ü—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ —Å–ø—Ä–∞–≤–∫–∏:*\n\n{part}", parse_mode='Markdown')
            else:
                self.bot.send_message(message.chat.id, help_text, parse_mode='Markdown')
            
            telegram_logger.user_action(message.from_user.id, "–∑–∞–ø—Ä–æ—Å–∏–ª —Å–ø—Ä–∞–≤–∫—É")
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–∫–∞–∑–∞ —Å–ø—Ä–∞–≤–∫–∏: {e}")
            self._send_error_message(message, "–û—à–∏–±–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–ø—Ä–∞–≤–∫–∏")
    
    def _generate_help_text(self, user_id: int) -> str:
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–∞ —Å–ø—Ä–∞–≤–∫–∏"""
        is_admin = security_manager.is_admin(user_id)
        
        text = f"{MessageFormatter.get_emoji('info')} **–°–ü–†–ê–í–ö–ê –ü–û –ö–û–ú–ê–ù–î–ê–ú**\n\n"
        
        if is_admin:
            text += f"{MessageFormatter.get_emoji('admin')} **–ê–î–ú–ò–ù–°–ö–ò–ï –ö–û–ú–ê–ù–î–´:**\n\n"
            
            # –ü–ª–∞–Ω 1 - –ë–∞–∑–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã
            text += f"**{MessageFormatter.get_emoji('menu')} –û—Å–Ω–æ–≤–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:**\n"
            text += f"‚Ä¢ `/menu` - –û—Ç–∫—Ä—ã—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n"
            text += f"‚Ä¢ `/resetmenu` - –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–∏—Å—Ç–µ–º—É –º–µ–Ω—é\n"
            text += f"‚Ä¢ `/help` - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É\n"
            text += f"‚Ä¢ `/enablebot` - –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –±–æ—Ç–∞\n"
            text += f"‚Ä¢ `/disablebot` - –î–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –±–æ—Ç–∞\n\n"
            
            text += f"**{MessageFormatter.get_emoji('system')} –†–µ–∂–∏–º—ã –ª–∏–º–∏—Ç–æ–≤:**\n"
            text += f"‚Ä¢ `/setmode_conservative` - –ö–æ–Ω—Å–µ—Ä–≤–∞—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º\n"
            text += f"‚Ä¢ `/setmode_normal` - –û–±—ã—á–Ω—ã–π —Ä–µ–∂–∏–º\n"
            text += f"‚Ä¢ `/setmode_burst` - Burst —Ä–µ–∂–∏–º (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)\n"
            text += f"‚Ä¢ `/setmode_adminburst` - Admin Burst —Ä–µ–∂–∏–º\n"
            text += f"‚Ä¢ `/currentmode` - –¢–µ–∫—É—â–∏–π —Ä–µ–∂–∏–º –ª–∏–º–∏—Ç–æ–≤\n"
            text += f"‚Ä¢ `/reloadmodes` - –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–µ–∂–∏–º–æ–≤\n\n"
            
            text += f"**{MessageFormatter.get_emoji('link')} –†–∞–±–æ—Ç–∞ —Å–æ —Å—Å—ã–ª–∫–∞–º–∏:**\n"
            text += f"‚Ä¢ `/last10links` - –ü–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Å—Å—ã–ª–æ–∫\n"
            text += f"‚Ä¢ `/last30links` - –ü–æ—Å–ª–µ–¥–Ω–∏–µ 30 —Å—Å—ã–ª–æ–∫\n"
            text += f"‚Ä¢ `/clearlinks` - –û—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é —Å—Å—ã–ª–æ–∫\n\n"
            
            # –ü–ª–∞–Ω 2 - –°–∏—Å—Ç–µ–º–∞ –∫–∞—Ä–º—ã
            if config.ENABLE_PLAN_2_FEATURES:
                text += f"**{MessageFormatter.get_emoji('karma')} –°–∏—Å—Ç–µ–º–∞ –∫–∞—Ä–º—ã:**\n"
                text += f"‚Ä¢ `/karma @username +5` - –ò–∑–º–µ–Ω–∏—Ç—å –∫–∞—Ä–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n"
                text += f"‚Ä¢ `/karmastat` - –õ–∏–¥–µ—Ä–±–æ—Ä–¥ –ø–æ –∫–∞—Ä–º–µ\n"
                text += f"‚Ä¢ `/presavestat` - –õ–∏–¥–µ—Ä–±–æ—Ä–¥ –ø–æ –ø—Ä–æ—Å—å–±–∞–º –æ –ø—Ä–µ—Å–µ–π–≤–∞—Ö\n"
                text += f"‚Ä¢ `/ratiostat @username 15:12` - –ò–∑–º–µ–Ω–∏—Ç—å —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n\n"
            else:
                text += f"**{MessageFormatter.get_emoji('loading')} –°–∏—Å—Ç–µ–º–∞ –∫–∞—Ä–º—ã (–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ):**\n"
                text += f"‚Ä¢ –ö–æ–º–∞–Ω–¥—ã –∫–∞—Ä–º—ã –±—É–¥—É—Ç –¥–æ—Å—Ç—É–ø–Ω—ã –≤ –ü–ª–∞–Ω–µ 2\n\n"
            
            # –ü–ª–∞–Ω 3 - –ò–ò –∏ —Ñ–æ—Ä–º—ã
            if config.ENABLE_PLAN_3_FEATURES:
                text += f"**{MessageFormatter.get_emoji('ai')} –ò–ò –∏ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ —Ñ–æ—Ä–º—ã:**\n"
                text += f"‚Ä¢ `/checkapprovals` - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–∞—è–≤–∫–∏ –Ω–∞ –∞–ø–ø—Ä—É–≤—ã\n"
                text += f"‚Ä¢ `/editreminder` - –ò–∑–º–µ–Ω–∏—Ç—å —Ç–µ–∫—Å—Ç –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è\n"
                text += f"‚Ä¢ `/clearapprovals` - –û—á–∏—Å—Ç–∏—Ç—å –∑–∞—è–≤–∫–∏ –Ω–∞ –∞–ø–ø—Ä—É–≤—ã\n"
                text += f"‚Ä¢ `/clearasks` - –û—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é –ø—Ä–æ—Å—å–±\n\n"
            else:
                text += f"**{MessageFormatter.get_emoji('loading')} –ò–ò –∏ —Ñ–æ—Ä–º—ã (–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ):**\n"
                text += f"‚Ä¢ –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –±—É–¥—É—Ç –¥–æ—Å—Ç—É–ø–Ω—ã –≤ –ü–ª–∞–Ω–µ 3\n\n"
            
            # –ü–ª–∞–Ω 4 - Backup —Å–∏—Å—Ç–µ–º–∞
            if config.ENABLE_PLAN_4_FEATURES:
                text += f"**{MessageFormatter.get_emoji('backup')} Backup —Å–∏—Å—Ç–µ–º–∞:**\n"
                text += f"‚Ä¢ `/downloadsql` - –°–æ–∑–¥–∞—Ç—å backup –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö\n"
                text += f"‚Ä¢ `/backupstatus` - –°—Ç–∞—Ç—É—Å –∏ –≤–æ–∑—Ä–∞—Å—Ç –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö\n"
                text += f"‚Ä¢ `/backuphelp` - –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ backup/restore\n\n"
            else:
                text += f"**{MessageFormatter.get_emoji('loading')} Backup —Å–∏—Å—Ç–µ–º–∞ (–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ):**\n"
                text += f"‚Ä¢ –§—É–Ω–∫—Ü–∏–∏ backup –±—É–¥—É—Ç –¥–æ—Å—Ç—É–ø–Ω—ã –≤ –ü–ª–∞–Ω–µ 4\n\n"
            
            text += f"**{MessageFormatter.get_emoji('stats')} –ê–Ω–∞–ª–∏—Ç–∏–∫–∞:**\n"
            text += f"‚Ä¢ `/mystat` - –ú–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞\n"
            text += f"‚Ä¢ `/linksby @username` - –°—Å—ã–ª–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n"
            text += f"‚Ä¢ `/approvesby @username` - –ö–∞—Ä–º–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n"
            text += f"‚Ä¢ `/userratiostat @username` - –°–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n\n"
            
            text += f"**{MessageFormatter.get_emoji('system')} –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞:**\n"
            text += f"‚Ä¢ `/keepalive` - –¢–µ—Å—Ç Keep Alive\n"
            text += f"‚Ä¢ `/checksystem` - –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã\n"
            text += f"‚Ä¢ `/botstatus` - –°—Ç–∞—Ç—É—Å –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞\n\n"
        
        else:
            text += f"{MessageFormatter.get_emoji('user')} **–ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨–°–ö–ò–ï –ö–û–ú–ê–ù–î–´:**\n\n"
            text += f"‚Ä¢ `/help` - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É\n"
            text += f"‚Ä¢ `/mystat` - –ú–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞\n\n"
            
            text += f"{MessageFormatter.get_emoji('info')} **–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç–∞:**\n"
            text += f"‚Ä¢ –ü—É–±–ª–∏–∫—É–π—Ç–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ –ø—Ä–µ—Å–µ–π–≤—ã –≤ —Ä–∞–∑—Ä–µ—à—ë–Ω–Ω—ã—Ö —Ç–æ–ø–∏–∫–∞—Ö\n"
            text += f"‚Ä¢ –ë–æ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–∞–ø–æ–º–Ω–∏—Ç –æ –≤–∑–∞–∏–º–Ω—ã—Ö –ø—Ä–µ—Å–µ–π–≤–∞—Ö\n"
            text += f"‚Ä¢ –ë–ª–∞–≥–æ–¥–∞—Ä–∏—Ç–µ –¥—Ä—É–≥–∏—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ - —ç—Ç–æ –≤–ª–∏—è–µ—Ç –Ω–∞ –∫–∞—Ä–º—É\n"
            text += f"‚Ä¢ –î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–º —Ñ—É–Ω–∫—Ü–∏—è–º –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∞–º\n\n"
        
        # –û–±—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
        text += f"**{MessageFormatter.get_emoji('info')} –û–ë–©–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø:**\n\n"
        text += f"**–í–µ—Ä—Å–∏—è –±–æ—Ç–∞:** v25+ (–ø–æ—ç—Ç–∞–ø–Ω–∞—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞)\n"
        text += f"**–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫:** @Mister_DMS\n"
        text += f"**–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ:** –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –≤–∑–∞–∏–º–Ω—ã—Ö –ø—Ä–µ—Å–µ–π–≤–æ–≤ –≤ –º—É–∑—ã–∫–∞–ª—å–Ω–æ–º —Å–æ–æ–±—â–µ—Å—Ç–≤–µ\n\n"
        
        text += f"**–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Å–µ—Ä–≤–∏—Å—ã:**\n"
        text += f"‚Ä¢ {MessageFormatter.get_emoji('spotify')} Spotify\n"
        text += f"‚Ä¢ {MessageFormatter.get_emoji('apple_music')} Apple Music\n"
        text += f"‚Ä¢ {MessageFormatter.get_emoji('youtube')} YouTube Music\n"
        text += f"‚Ä¢ {MessageFormatter.get_emoji('music')} SoundCloud, Bandcamp, Deezer –∏ –¥—Ä—É–≥–∏–µ\n\n"
        
        if is_admin:
            text += f"{MessageFormatter.get_emoji('warning')} **–í–ê–ñ–ù–û:** –í—Å–µ –∞–¥–º–∏–Ω—Å–∫–∏–µ –∫–æ–º–∞–Ω–¥—ã –ª–æ–≥–∏—Ä—É—é—Ç—Å—è –∏ –º–æ–Ω–∏—Ç–æ—Ä—è—Ç—Å—è."
        
        return text
    
    # ============================================
    # –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò CALLBACK'–û–í
    # ============================================
    
    def handle_menu_callback(self, call: CallbackQuery):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ callback'–æ–≤ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é"""
        try:
            data = call.data
            
            if data == 'menu_main':
                self.show_main_menu(call, edit_message=True)
            
            elif data == 'menu_mystat':
                self.show_my_statistics(call)
            
            elif data == 'menu_leaderboard':
                self.show_leaderboard_menu(call)
            
            elif data == 'menu_actions':
                self.show_actions_menu(call)
            
            elif data == 'menu_analytics':
                self.show_analytics_menu(call)
            
            elif data == 'menu_diagnostics':
                self.show_diagnostics_menu(call)
            
            elif data == 'menu_ai':
                self.show_ai_menu(call)
            
            elif data == 'menu_help':
                self.show_help_from_menu(call)
            
            elif data == 'menu_settings':
                self.show_settings_menu(call)
            
            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º callback
            self.bot.answer_callback_query(call.id)
            
        except AccessDeniedError:
            self.bot.answer_callback_query(call.id, "‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω!", show_alert=True)
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ callback –º–µ–Ω—é: {e}")
            self.bot.answer_callback_query(call.id, "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞", show_alert=True)
    
    @admin_required
    def show_my_statistics(self, call: CallbackQuery):
        """–ü–æ–∫–∞–∑ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        try:
            user_id = call.from_user.id
            stats = self.db.get_user_stats(user_id)
            
            stats_text = UserHelper.format_user_stats_message(stats)
            
            keyboard = KeyboardBuilder.create_back_button('menu_main')
            
            self.bot.edit_message_text(
                stats_text,
                call.message.chat.id,
                call.message.message_id,
                parse_mode='Markdown',
                reply_markup=keyboard
            )
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–∫–∞–∑–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}")
            self._send_callback_error(call, "–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏")
    
    @admin_required
    def show_leaderboard_menu(self, call: CallbackQuery):
        """–ü–æ–∫–∞–∑ –º–µ–Ω—é –ª–∏–¥–µ—Ä–±–æ—Ä–¥–æ–≤"""
        try:
            text = f"{MessageFormatter.get_emoji('leaderboard')} **–õ–ò–î–ï–†–ë–û–†–î–´**\n\n"
            
            if config.ENABLE_PLAN_2_FEATURES:
                text += f"{MessageFormatter.get_emoji('info')} –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —Ä–µ–π—Ç–∏–Ω–≥–∞:\n\n"
                text += f"‚Ä¢ **–ü–æ –ø—Ä–æ—Å—å–±–∞–º –æ –ø—Ä–µ—Å–µ–π–≤–∞—Ö** - –∫—Ç–æ –±–æ–ª—å—à–µ –≤—Å–µ—Ö –ø—Ä–æ—Å–∏–ª –ø–æ–¥–¥–µ—Ä–∂–∫–∏\n"
                text += f"‚Ä¢ **–ü–æ –∫–∞—Ä–º–µ** - —Ä–µ–π—Ç–∏–Ω–≥ –ø–æ –∑–∞—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–π –∫–∞—Ä–º–µ\n"
                text += f"‚Ä¢ **–ü–æ —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏—é** - —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –≤–∑–∞–∏–º–Ω–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏"
            else:
                text += f"{MessageFormatter.get_emoji('loading')} –õ–∏–¥–µ—Ä–±–æ—Ä–¥—ã –±—É–¥—É—Ç –¥–æ—Å—Ç—É–ø–Ω—ã –ø–æ—Å–ª–µ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ü–ª–∞–Ω–∞ 2 (–°–∏—Å—Ç–µ–º–∞ –∫–∞—Ä–º—ã).\n\n"
                text += f"–ü–æ–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –±–∞–∑–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å—Å—ã–ª–æ–∫."
            
            keyboard = KeyboardBuilder.create_leaderboard_keyboard()
            
            self.bot.edit_message_text(
                text,
                call.message.chat.id,
                call.message.message_id,
                parse_mode='Markdown',
                reply_markup=keyboard
            )
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–∫–∞–∑–∞ –º–µ–Ω—é –ª–∏–¥–µ—Ä–±–æ—Ä–¥–æ–≤: {e}")
            self._send_callback_error(call, "–û—à–∏–±–∫–∞ –º–µ–Ω—é –ª–∏–¥–µ—Ä–±–æ—Ä–¥–æ–≤")
    
    @admin_required
    def show_actions_menu(self, call: CallbackQuery):
        """–ü–æ–∫–∞–∑ –º–µ–Ω—é –¥–µ–π—Å—Ç–≤–∏–π"""
        try:
            text = f"{MessageFormatter.get_emoji('form')} **–î–ï–ô–°–¢–í–ò–Ø**\n\n"
            text += f"{MessageFormatter.get_emoji('info')} –î–æ—Å—Ç—É–ø–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏:\n\n"
            
            if config.ENABLE_PLAN_3_FEATURES:
                text += f"‚Ä¢ **–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ —Ñ–æ—Ä–º—ã** - —É–¥–æ–±–Ω–∞—è –ø–æ–¥–∞—á–∞ –∑–∞—è–≤–æ–∫\n"
                text += f"‚Ä¢ **–ú–æ–¥–µ—Ä–∞—Ü–∏—è –∞–ø–ø—Ä—É–≤–æ–≤** - –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞—è–≤–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π\n"
            else:
                text += f"‚Ä¢ **–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ —Ñ–æ—Ä–º—ã** - –±—É–¥—É—Ç –¥–æ—Å—Ç—É–ø–Ω—ã –≤ –ü–ª–∞–Ω–µ 3\n"
            
            text += f"‚Ä¢ **–ü—Ä–æ—Å–º–æ—Ç—Ä —Å—Å—ã–ª–æ–∫** - –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–ø—Ä–æ—Å—ã –ø—Ä–µ—Å–µ–π–≤–æ–≤\n"
            text += f"‚Ä¢ **–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞** - –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã"
            
            keyboard = KeyboardBuilder.create_actions_keyboard()
            
            self.bot.edit_message_text(
                text,
                call.message.chat.id,
                call.message.message_id,
                parse_mode='Markdown',
                reply_markup=keyboard
            )
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–∫–∞–∑–∞ –º–µ–Ω—é –¥–µ–π—Å—Ç–≤–∏–π: {e}")
            self._send_callback_error(call, "–û—à–∏–±–∫–∞ –º–µ–Ω—é –¥–µ–π—Å—Ç–≤–∏–π")
    
    @admin_required
    def show_settings_menu(self, call: CallbackQuery):
        """–ü–æ–∫–∞–∑ –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
        try:
            text = f"{MessageFormatter.get_emoji('system')} **–ù–ê–°–¢–†–û–ô–ö–ò –ë–û–¢–ê**\n\n"
            
            # –¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
            bot_enabled = ConfigHelper.is_bot_enabled()
            current_mode = ConfigHelper.get_current_limit_mode()
            
            text += f"**–¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ:**\n"
            text += f"‚Ä¢ –°—Ç–∞—Ç—É—Å: {'‚úÖ –ê–∫—Ç–∏–≤–µ–Ω' if bot_enabled else '‚ùå –î–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω'}\n"
            text += f"‚Ä¢ –†–µ–∂–∏–º –ª–∏–º–∏—Ç–æ–≤: {current_mode}\n\n"
            
            text += f"{MessageFormatter.get_emoji('info')} –í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫—É –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è:"
            
            keyboard = KeyboardBuilder.create_settings_keyboard()
            
            self.bot.edit_message_text(
                text,
                call.message.chat.id,
                call.message.message_id,
                parse_mode='Markdown',
                reply_markup=keyboard
            )
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–∫–∞–∑–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫: {e}")
            self._send_callback_error(call, "–û—à–∏–±–∫–∞ –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫")
    
    def show_under_development(self, call: CallbackQuery):
        """–ü–æ–∫–∞–∑ —Å–æ–æ–±—â–µ–Ω–∏—è –æ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ"""
        try:
            text = f"{MessageFormatter.get_emoji('loading')} **–§–£–ù–ö–¶–ò–Ø –í –†–ê–ó–†–ê–ë–û–¢–ö–ï**\n\n"
            text += f"{MessageFormatter.get_emoji('info')} –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–∏—Ö –ø–ª–∞–Ω–∞—Ö —Ä–∞–∑–≤–∏—Ç–∏—è:\n\n"
            text += f"‚Ä¢ **–ü–ª–∞–Ω 2** - –°–∏—Å—Ç–µ–º–∞ –∫–∞—Ä–º—ã –∏ –ª–∏–¥–µ—Ä–±–æ—Ä–¥—ã\n"
            text += f"‚Ä¢ **–ü–ª–∞–Ω 3** - –ò–ò –∏ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ —Ñ–æ—Ä–º—ã\n"
            text += f"‚Ä¢ **–ü–ª–∞–Ω 4** - –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è backup —Å–∏—Å—Ç–µ–º–∞\n\n"
            text += f"{MessageFormatter.get_emoji('time')} –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –≤–µ–¥–µ—Ç—Å—è –ø–æ—ç—Ç–∞–ø–Ω–æ –¥–ª—è –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏.\n\n"
            text += f"**–¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å:** –í –∞–∫—Ç–∏–≤–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ\n"
            text += f"**–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫:** @Mister_DMS"
            
            keyboard = KeyboardBuilder.create_back_button('menu_main')
            
            self.bot.edit_message_text(
                text,
                call.message.chat.id,
                call.message.message_id,
                parse_mode='Markdown',
                reply_markup=keyboard
            )
            
            self.bot.answer_callback_query(
                call.id, 
                "üîÑ –§—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ", 
                show_alert=False
            )
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–∫–∞–∑–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –æ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ: {e}")
    
    # ============================================
    # –ó–ê–ì–õ–£–®–ö–ò –î–õ–Ø –ë–£–î–£–©–ò–• –ü–õ–ê–ù–û–í
    # ============================================
    
    def handle_leaderboard_callback(self, call: CallbackQuery):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ª–∏–¥–µ—Ä–±–æ—Ä–¥–æ–≤ (–∑–∞–≥–ª—É—à–∫–∞ –¥–ª—è –ü–ª–∞–Ω–∞ 2)"""
        if not config.ENABLE_PLAN_2_FEATURES:
            self.show_under_development(call)
            return
        
        # –ó–¥–µ—Å—å –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è –ª–∏–¥–µ—Ä–±–æ—Ä–¥–æ–≤ –≤ –ü–ª–∞–Ω–µ 2
        self.bot.answer_callback_query(call.id, "–õ–∏–¥–µ—Ä–±–æ—Ä–¥—ã –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ")
    
    def handle_action_callback(self, call: CallbackQuery):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–µ–π—Å—Ç–≤–∏–π"""
        data = call.data
        
        if data.startswith('action_last'):
            # –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å—Å—ã–ª–æ–∫
            if data == 'action_last10_links':
                self.show_recent_links(call, limit=10)
            elif data == 'action_last30_links':
                self.show_recent_links(call, limit=30)
        
        elif data.startswith('action_ask') or data.startswith('action_claim') or data.startswith('action_check'):
            # –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ —Ñ–æ—Ä–º—ã (–ü–ª–∞–Ω 3)
            if not config.ENABLE_PLAN_3_FEATURES:
                self.show_under_development(call)
            else:
                # –ó–¥–µ—Å—å –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è —Ñ–æ—Ä–º –≤ –ü–ª–∞–Ω–µ 3
                self.bot.answer_callback_query(call.id, "–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ —Ñ–æ—Ä–º—ã –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ")
        
        self.bot.answer_callback_query(call.id)
    
    def handle_settings_callback(self, call: CallbackQuery):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
        data = call.data
        
        if data == 'settings_limits':
            self.show_limits_menu(call)
        else:
            # –û—Å—Ç–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±—É–¥—É—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω—ã –ø–æ–∑–∂–µ
            self.bot.answer_callback_query(call.id, "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ")
    
    def handle_limits_callback(self, call: CallbackQuery):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ä–µ–∂–∏–º–æ–≤ –ª–∏–º–∏—Ç–æ–≤"""
        # –ë—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ –≤ handlers/commands.py
        self.bot.answer_callback_query(call.id, "–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ä–µ–∂–∏–º–æ–≤ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ")
    
    @admin_required
    def show_recent_links(self, call: CallbackQuery, limit: int = 10):
        """–ü–æ–∫–∞–∑ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Å—Å—ã–ª–æ–∫"""
        try:
            links = self.db.get_recent_links(limit=limit)
            
            text = DataHelper.format_links_list(links, max_links=limit)
            
            keyboard = KeyboardBuilder.create_back_button('menu_actions')
            
            self.bot.edit_message_text(
                text,
                call.message.chat.id,
                call.message.message_id,
                parse_mode='Markdown',
                reply_markup=keyboard
            )
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–∫–∞–∑–∞ —Å—Å—ã–ª–æ–∫: {e}")
            self._send_callback_error(call, "–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Å—ã–ª–æ–∫")
    
    @admin_required
    def show_limits_menu(self, call: CallbackQuery):
        """–ü–æ–∫–∞–∑ –º–µ–Ω—é —Ä–µ–∂–∏–º–æ–≤ –ª–∏–º–∏—Ç–æ–≤"""
        try:
            current_mode = ConfigHelper.get_current_limit_mode()
            
            text = f"{MessageFormatter.get_emoji('system')} **–†–ï–ñ–ò–ú–´ –õ–ò–ú–ò–¢–û–í API**\n\n"
            text += ConfigHelper.format_limit_mode_info(current_mode)
            text += f"\n\n{MessageFormatter.get_emoji('info')} –í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–≤—ã–π —Ä–µ–∂–∏–º:"
            
            keyboard = KeyboardBuilder.create_limits_keyboard()
            
            self.bot.edit_message_text(
                text,
                call.message.chat.id,
                call.message.message_id,
                parse_mode='Markdown',
                reply_markup=keyboard
            )
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–∫–∞–∑–∞ –º–µ–Ω—é –ª–∏–º–∏—Ç–æ–≤: {e}")
            self._send_callback_error(call, "–û—à–∏–±–∫–∞ –º–µ–Ω—é –ª–∏–º–∏—Ç–æ–≤")
    
    # ============================================
    # –ó–ê–ì–õ–£–®–ö–ò –î–õ–Ø –ë–£–î–£–©–ò–• –†–ê–ó–î–ï–õ–û–í
    # ============================================
    
    @admin_required
    def show_analytics_menu(self, call: CallbackQuery):
        """–ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è –º–µ–Ω—é –∞–Ω–∞–ª–∏—Ç–∏–∫–∏"""
        text = f"{MessageFormatter.get_emoji('loading')} **–†–ê–°–®–ò–†–ï–ù–ù–ê–Ø –ê–ù–ê–õ–ò–¢–ò–ö–ê**\n\n"
        text += f"–§—É–Ω–∫—Ü–∏–∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –±—É–¥—É—Ç –¥–æ—Å—Ç—É–ø–Ω—ã –ø–æ—Å–ª–µ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö –ø–ª–∞–Ω–æ–≤."
        
        keyboard = KeyboardBuilder.create_back_button('menu_main')
        
        self.bot.edit_message_text(
            text,
            call.message.chat.id,
            call.message.message_id,
            parse_mode='Markdown',
            reply_markup=keyboard
        )
    
    @admin_required
    def show_diagnostics_menu(self, call: CallbackQuery):
        """–ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è –º–µ–Ω—é –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏"""
        text = f"{MessageFormatter.get_emoji('loading')} **–î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –°–ò–°–¢–ï–ú–´**\n\n"
        text += f"–§—É–Ω–∫—Ü–∏–∏ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –±—É–¥—É—Ç –¥–æ—Å—Ç—É–ø–Ω—ã –ø–æ—Å–ª–µ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö –ø–ª–∞–Ω–æ–≤."
        
        keyboard = KeyboardBuilder.create_back_button('menu_main')
        
        self.bot.edit_message_text(
            text,
            call.message.chat.id,
            call.message.message_id,
            parse_mode='Markdown',
            reply_markup=keyboard
        )
    
    @admin_required
    def show_ai_menu(self, call: CallbackQuery):
        """–ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è –º–µ–Ω—é –ò–ò"""
        if not config.ENABLE_PLAN_3_FEATURES:
            self.show_under_development(call)
            return
        
        text = f"{MessageFormatter.get_emoji('ai')} **–ò–ò –ò –ê–í–¢–û–ú–ê–¢–ò–ó–ê–¶–ò–Ø**\n\n"
        text += f"–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ò–ò –∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –±—É–¥—É—Ç –¥–æ—Å—Ç—É–ø–Ω—ã –≤ –ü–ª–∞–Ω–µ 3."
        
        keyboard = KeyboardBuilder.create_back_button('menu_main')
        
        self.bot.edit_message_text(
            text,
            call.message.chat.id,
            call.message.message_id,
            parse_mode='Markdown',
            reply_markup=keyboard
        )
    
    def show_help_from_menu(self, call: CallbackQuery):
        """–ü–æ–∫–∞–∑ —Å–ø—Ä–∞–≤–∫–∏ –∏–∑ –º–µ–Ω—é"""
        try:
            help_text = self._generate_help_text(call.from_user.id)
            
            # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–ª–∏–Ω—É –¥–ª—è callback
            if len(help_text) > 4000:
                help_text = help_text[:4000] + "\n\n*–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è –ø–æ–ª–Ω–æ–π —Å–ø—Ä–∞–≤–∫–∏*"
            
            keyboard = KeyboardBuilder.create_back_button('menu_main')
            
            self.bot.edit_message_text(
                help_text,
                call.message.chat.id,
                call.message.message_id,
                parse_mode='Markdown',
                reply_markup=keyboard
            )
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–∫–∞–∑–∞ —Å–ø—Ä–∞–≤–∫–∏ –∏–∑ –º–µ–Ω—é: {e}")
            self._send_callback_error(call, "–û—à–∏–±–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–ø—Ä–∞–≤–∫–∏")
    
    # ============================================
    # –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï –ú–ï–¢–û–î–´
    # ============================================
    
    def _send_error_message(self, message_or_call, error_text: str):
        """–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ"""
        try:
            full_error = f"{MessageFormatter.get_emoji('error')} {error_text}\n\n" \
                        f"–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ–º–∞–Ω–¥—É /resetmenu –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è."
            
            if isinstance(message_or_call, CallbackQuery):
                chat_id = message_or_call.message.chat.id
            else:
                chat_id = message_or_call.chat.id
            
            self.bot.send_message(chat_id, full_error, parse_mode='Markdown')
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ: {e}")
    
    def _send_callback_error(self, call: CallbackQuery, error_text: str):
        """–û—Ç–ø—Ä–∞–≤–∫–∞ –æ—à–∏–±–∫–∏ –¥–ª—è callback"""
        try:
            self.bot.answer_callback_query(call.id, f"‚ùå {error_text}", show_alert=True)
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ callback –æ—à–∏–±–∫–∏: {e}")

# ============================================
# –ì–õ–û–ë–ê–õ–¨–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–ò
# ============================================

def init_menu_system(bot: telebot.TeleBot) -> MenuManager:
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –º–µ–Ω—é"""
    return MenuManager(bot)

# ============================================
# –≠–ö–°–ü–û–†–¢
# ============================================

__all__ = ['MenuManager', 'init_menu_system']

if __name__ == "__main__":
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Menu System...")
    print("‚úÖ –ú–æ–¥—É–ª—å menu.py –≥–æ—Ç–æ–≤ –∫ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏")
