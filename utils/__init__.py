"""
–ú–æ–¥—É–ª—å –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã—Ö —É—Ç–∏–ª–∏—Ç - Do Presave Reminder Bot v25+
–û–±—â–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏, –≤–∞–ª–∏–¥–∞—Ü–∏—è, –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å, –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ, —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ

–ü–õ–ê–ù 1: –ë–∞–∑–æ–≤—ã–µ —É—Ç–∏–ª–∏—Ç—ã (–ê–ö–¢–ò–í–ù–´–ï)
–ü–õ–ê–ù 2: –£—Ç–∏–ª–∏—Ç—ã –∫–∞—Ä–º—ã (–ó–ê–ì–õ–£–®–ö–ò)
–ü–õ–ê–ù 3: –£—Ç–∏–ª–∏—Ç—ã –ò–ò –∏ —Ñ–æ—Ä–º (–ó–ê–ì–õ–£–®–ö–ò)
–ü–õ–ê–ù 4: –£—Ç–∏–ª–∏—Ç—ã backup (–ó–ê–ì–õ–£–®–ö–ò)
"""

from utils.logger import get_logger

logger = get_logger(__name__)

# ============================================
# –ü–õ–ê–ù 1: –ë–ê–ó–û–í–´–ï –£–¢–ò–õ–ò–¢–´ (–ê–ö–¢–ò–í–ù–´–ï)
# ============================================

# –û—Å–Ω–æ–≤–Ω—ã–µ —É—Ç–∏–ª–∏—Ç—ã - –≤—Å–µ–≥–¥–∞ –∏–º–ø–æ—Ä—Ç–∏—Ä—É—é—Ç—Å—è
from .logger import get_logger, setup_logging, log_user_action, log_database_operation
from .security import SecurityManager, admin_required, whitelist_required, validate_admin
from .helpers import (
    format_user_mention,
    truncate_text,
    clean_text,
    format_datetime,
    time_ago,
    create_progress_bar,
    is_valid_url,
    validate_user_input,
    format_file_size,
    extract_numbers,
    generate_unique_id
)
from .limits import LimitManager, get_current_limits
from .validators import (
    BaseValidator,
    ConfigValidator,
    validate_all_required_env_vars,
    create_validation_report
)

# ============================================
# –ü–õ–ê–ù 2: –£–¢–ò–õ–ò–¢–´ –ö–ê–†–ú–´ (–ó–ê–ì–õ–£–®–ö–ò)
# ============================================

# TODO: –ò–º–ø–æ—Ä—Ç –±—É–¥–µ—Ç –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –≤ –ü–õ–ê–ù–ï 2
# from .formatters import (
#     format_karma_display,
#     format_leaderboard,
#     create_karma_progress_bar,
#     format_user_stats
# )

# ============================================
# –ü–õ–ê–ù 3: –£–¢–ò–õ–ò–¢–´ –ò–ò –ò –§–û–†–ú (–ó–ê–ì–õ–£–®–ö–ò)
# ============================================

# TODO: –ò–º–ø–æ—Ä—Ç –±—É–¥–µ—Ç –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –≤ –ü–õ–ê–ù–ï 3
# from .ai_helpers import (
#     clean_ai_response,
#     format_ai_message,
#     validate_ai_content
# )
# from .form_helpers import (
#     validate_form_data,
#     format_form_message,
#     handle_file_upload
# )

# ============================================
# –ü–õ–ê–ù 4: –£–¢–ò–õ–ò–¢–´ BACKUP (–ó–ê–ì–õ–£–®–ö–ò)
# ============================================

# TODO: –ò–º–ø–æ—Ä—Ç –±—É–¥–µ—Ç –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –≤ –ü–õ–ê–ù–ï 4
# from .backup_helpers import (
#     validate_backup_file,
#     format_backup_size,
#     compress_backup_data
# )

# ============================================
# –≠–ö–°–ü–û–†–¢ –ê–ö–¢–ò–í–ù–´–• –£–¢–ò–õ–ò–¢
# ============================================

__all__ = [
    # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
    'get_logger',
    'setup_logging', 
    'log_user_action',
    'log_database_operation',
    
    # –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å
    'SecurityManager',
    'admin_required',
    'whitelist_required',
    'validate_admin',
    
    # –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
    'format_user_mention',
    'truncate_text',
    'clean_text',
    'format_datetime',
    'time_ago',
    'create_progress_bar',
    'is_valid_url',
    'validate_user_input',
    'format_file_size',
    'extract_numbers',
    'generate_unique_id',
    
    # –õ–∏–º–∏—Ç—ã API
    'LimitManager',
    'get_current_limits',
    
    # –í–∞–ª–∏–¥–∞—Ü–∏—è
    'BaseValidator',
    'ConfigValidator',
    'validate_all_required_env_vars',
    'create_validation_report',
    
    # –ü–õ–ê–ù 2 (–ó–ê–ì–õ–£–®–ö–ò)
    # 'format_karma_display',
    # 'format_leaderboard',
    # 'create_karma_progress_bar',
    # 'format_user_stats',
    
    # –ü–õ–ê–ù 3 (–ó–ê–ì–õ–£–®–ö–ò)
    # 'clean_ai_response',
    # 'format_ai_message',
    # 'validate_ai_content',
    # 'validate_form_data',
    # 'format_form_message',
    # 'handle_file_upload',
    
    # –ü–õ–ê–ù 4 (–ó–ê–ì–õ–£–®–ö–ò)
    # 'validate_backup_file',
    # 'format_backup_size',
    # 'compress_backup_data',
]

# ============================================
# –ì–õ–û–ë–ê–õ–¨–ù–´–ï –ö–û–ù–°–¢–ê–ù–¢–´
# ============================================

# –õ–∏–º–∏—Ç—ã –∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è
MAX_MESSAGE_LENGTH = 4096
MAX_CALLBACK_DATA_LENGTH = 64
MAX_USERNAME_LENGTH = 32
MAX_TEXT_INPUT_LENGTH = 1000

# –≠–º–æ–¥–∑–∏ –¥–ª—è UI
EMOJI = {
    'success': '‚úÖ',
    'error': '‚ùå', 
    'warning': '‚ö†Ô∏è',
    'info': '‚ÑπÔ∏è',
    'loading': 'üîÑ',
    'menu': 'üìã',
    'stats': 'üìä',
    'user': 'üë§',
    'admin': 'üëë',
    'link': 'üîó',
    'karma': 'üèÜ',
    'ai': 'ü§ñ',
    'backup': 'üíæ',
    'settings': '‚öôÔ∏è'
}

# –§–æ—Ä–º–∞—Ç—ã –≤—Ä–µ–º–µ–Ω–∏
TIME_FORMATS = {
    'short': '%H:%M',
    'medium': '%d.%m %H:%M',
    'long': '%d.%m.%Y %H:%M',
    'full': '%d.%m.%Y %H:%M:%S'
}

# ============================================
# –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –£–¢–ò–õ–ò–¢
# ============================================

def init_utils(config):
    """
    –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤—Å–µ—Ö —É—Ç–∏–ª–∏—Ç
    
    Args:
        config: –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±–æ—Ç–∞
        
    Returns:
        dict: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —É—Ç–∏–ª–∏—Ç—ã
    """
    try:
        logger.info("üîÑ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —É—Ç–∏–ª–∏—Ç...")
        
        utils = {}
        
        # –ü–õ–ê–ù 1: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑–æ–≤—ã—Ö —É—Ç–∏–ª–∏—Ç
        utils['security'] = SecurityManager(config.ADMIN_IDS, config.WHITELIST)
        utils['limits'] = LimitManager(config)
        
        # –í–∞–ª–∏–¥–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        is_valid, errors = validate_all_required_env_vars()
        if not is_valid:
            logger.error(f"‚ùå –û—à–∏–±–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {errors}")
            raise ValueError(f"–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è: {errors}")
        
        # –ü–õ–ê–ù 2: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —É—Ç–∏–ª–∏—Ç –∫–∞—Ä–º—ã (–ó–ê–ì–õ–£–®–ö–ò)
        if getattr(config, 'ENABLE_PLAN_2_FEATURES', False):
            logger.info("üîÑ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —É—Ç–∏–ª–∏—Ç –ü–õ–ê–ù 2...")
            # TODO: –î–æ–±–∞–≤–∏—Ç—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é —É—Ç–∏–ª–∏—Ç –∫–∞—Ä–º—ã
            logger.info("‚è∏Ô∏è –ü–õ–ê–ù 2 - –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ")
        
        # –ü–õ–ê–ù 3: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —É—Ç–∏–ª–∏—Ç –ò–ò –∏ —Ñ–æ—Ä–º (–ó–ê–ì–õ–£–®–ö–ò)
        if getattr(config, 'ENABLE_PLAN_3_FEATURES', False):
            logger.info("üîÑ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —É—Ç–∏–ª–∏—Ç –ü–õ–ê–ù 3...")
            # TODO: –î–æ–±–∞–≤–∏—Ç—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é —É—Ç–∏–ª–∏—Ç –ò–ò –∏ —Ñ–æ—Ä–º
            logger.info("‚è∏Ô∏è –ü–õ–ê–ù 3 - –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ")
        
        # –ü–õ–ê–ù 4: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —É—Ç–∏–ª–∏—Ç backup (–ó–ê–ì–õ–£–®–ö–ò)
        if getattr(config, 'ENABLE_PLAN_4_FEATURES', False):
            logger.info("üîÑ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —É—Ç–∏–ª–∏—Ç –ü–õ–ê–ù 4...")
            # TODO: –î–æ–±–∞–≤–∏—Ç—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é —É—Ç–∏–ª–∏—Ç backup
            logger.info("‚è∏Ô∏è –ü–õ–ê–ù 4 - –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ")
        
        logger.info(f"‚úÖ –£—Ç–∏–ª–∏—Ç—ã –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã: {len(utils)}")
        return utils
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —É—Ç–∏–ª–∏—Ç: {e}")
        raise

def validate_system():
    """–í–∞–ª–∏–¥–∞—Ü–∏—è –≤—Å–µ–π —Å–∏—Å—Ç–µ–º—ã —É—Ç–∏–ª–∏—Ç"""
    try:
        logger.info("üîç –í–∞–ª–∏–¥–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã —É—Ç–∏–ª–∏—Ç...")
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –º–æ–¥—É–ª–µ–π
        modules_status = {
            'logger': True,
            'security': True, 
            'helpers': True,
            'limits': True,
            'validators': True
        }
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        config_valid, config_errors = validate_all_required_env_vars()
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞
        report = create_validation_report()
        
        # –ò—Ç–æ–≥–æ–≤–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è
        all_valid = all(modules_status.values()) and config_valid
        
        if all_valid:
            logger.info("‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã —É—Å–ø–µ—à–Ω–∞")
        else:
            logger.error(f"‚ùå –û—à–∏–±–∫–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏: {config_errors}")
        
        return {
            'valid': all_valid,
            'modules': modules_status,
            'config': config_valid,
            'errors': config_errors,
            'report': report
        }
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —Å–∏—Å—Ç–µ–º—ã: {e}")
        return {'valid': False, 'error': str(e)}

# ============================================
# –§–£–ù–ö–¶–ò–ò –ü–û–ú–û–©–ò –î–õ–Ø –†–ê–ó–†–ê–ë–û–¢–ö–ò
# ============================================

def get_available_utils():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —É—Ç–∏–ª–∏—Ç –ø–æ –ø–ª–∞–Ω–∞–º"""
    return {
        'plan_1': [
            'logger - —Å–∏—Å—Ç–µ–º–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è —Å —ç–º–æ–¥–∑–∏',
            'security - –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –∏ –≤–∞–ª–∏–¥–∞—Ü–∏—è',
            'helpers - –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏',
            'limits - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ª–∏–º–∏—Ç–∞–º–∏ API',
            'validators - –≤–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö'
        ],
        'plan_2': [
            # 'formatters - —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–∞—Ä–º—ã –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏'  # –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ
        ],
        'plan_3': [
            # 'ai_helpers - —É—Ç–∏–ª–∏—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ò–ò',           # –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ
            # 'form_helpers - —É—Ç–∏–ª–∏—Ç—ã –¥–ª—è –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã—Ö —Ñ–æ—Ä–º'   # –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ
        ],
        'plan_4': [
            # 'backup_helpers - —É—Ç–∏–ª–∏—Ç—ã –¥–ª—è backup –æ–ø–µ—Ä–∞—Ü–∏–π'   # –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ
        ]
    }

def run_self_test():
    """–°–∞–º–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–¥—É–ª—è utils"""
    try:
        logger.info("üß™ –ó–∞–ø—É—Å–∫ —Å–∞–º–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è utils...")
        
        tests = {
            'format_user_mention': lambda: format_user_mention(12345, 'test'),
            'truncate_text': lambda: truncate_text('test text', 5),
            'is_valid_url': lambda: is_valid_url('https://example.com'),
            'generate_unique_id': lambda: generate_unique_id('test_'),
            'format_file_size': lambda: format_file_size(1024)
        }
        
        results = {}
        for test_name, test_func in tests.items():
            try:
                result = test_func()
                results[test_name] = {'success': True, 'result': result}
            except Exception as e:
                results[test_name] = {'success': False, 'error': str(e)}
        
        success_count = sum(1 for r in results.values() if r['success'])
        total_count = len(results)
        
        logger.info(f"üß™ –°–∞–º–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ: {success_count}/{total_count}")
        return results
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Å–∞–º–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        return {}

# ============================================
# –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –ú–û–î–£–õ–ï
# ============================================

def get_module_info():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –º–æ–¥—É–ª–µ utils"""
    return {
        'name': 'utils',
        'version': 'v25+',
        'description': '–í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —É—Ç–∏–ª–∏—Ç—ã –¥–ª—è –≤—Å–µ—Ö –ø–ª–∞–Ω–æ–≤',
        'components': {
            'logger': '–°–∏—Å—Ç–µ–º–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è —Å —ç–º–æ–¥–∑–∏',
            'security': '–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å', 
            'helpers': '–û–±—â–∏–µ –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏',
            'limits': '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ª–∏–º–∏—Ç–∞–º–∏ Telegram API',
            'validators': '–í–∞–ª–∏–¥–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∏ –¥–∞–Ω–Ω—ã—Ö'
        },
        'plans': {
            'plan_1': '–ë–∞–∑–æ–≤—ã–µ —É—Ç–∏–ª–∏—Ç—ã - –ê–ö–¢–ò–í–ù–´',
            'plan_2': '–£—Ç–∏–ª–∏—Ç—ã –∫–∞—Ä–º—ã - –í –†–ê–ó–†–ê–ë–û–¢–ö–ï',
            'plan_3': '–£—Ç–∏–ª–∏—Ç—ã –ò–ò –∏ —Ñ–æ—Ä–º - –í –†–ê–ó–†–ê–ë–û–¢–ö–ï',
            'plan_4': '–£—Ç–∏–ª–∏—Ç—ã backup - –í –†–ê–ó–†–ê–ë–û–¢–ö–ï'
        }
    }

logger.info("üì¶ –ú–æ–¥—É–ª—å utils/__init__.py –∑–∞–≥—Ä—É–∂–µ–Ω")