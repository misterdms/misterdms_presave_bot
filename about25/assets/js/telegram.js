/**
 * –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Telegram WebApp API
 * Do Presave Reminder Bot by Mister DMS
 */

class TelegramWebApp {
    constructor() {
        this.tg = window.Telegram?.WebApp;
        this.isReady = false;
        this.user = null;
        this.startParam = null;
        this.isDebug = false;
        
        this.init();
    }

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è WebApp
     */
    init() {
        if (!this.tg) {
            console.warn('‚ùå Telegram WebApp API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
            this.initBrowserMode();
            return;
        }

        try {
            console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram WebApp...');
            
            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è WebApp
            this.tg.ready();
            this.tg.expand();
            
            // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            this.user = this.tg.initDataUnsafe?.user;
            this.startParam = this.tg.initDataUnsafe?.start_param;
            
            // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç–µ–º—ã –∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
            this.setupTheme();
            this.setupMainButton();
            this.setupBackButton();
            this.setupEventHandlers();
            
            // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ viewport
            this.setupViewport();
            
            // –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–∏—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º
            this.tg.enableClosingConfirmation();
            
            this.isReady = true;
            console.log('‚úÖ Telegram WebApp –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ');
            console.log('üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:', this.user);
            
            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏
            this.dispatchEvent('webapp:ready', { user: this.user });
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Telegram WebApp:', error);
            this.initBrowserMode();
        }
    }

    /**
     * –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç–µ–º—ã
     */
    setupTheme() {
        // –ü—Ä–∏–º–µ–Ω—è–µ–º —Ç–µ–º—É Telegram –∫ –Ω–∞—à–µ–º—É WebApp
        if (this.tg.colorScheme === 'dark') {
            document.body.classList.add('dark-theme');
        }
        
        // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ü–≤–µ—Ç–∞ –∑–∞–≥–æ–ª–æ–≤–∫–∞
        if (this.tg.setHeaderColor) {
            this.tg.setHeaderColor('#667eea');
        }
        
        // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ü–≤–µ—Ç–∞ —Ñ–æ–Ω–∞
        if (this.tg.setBackgroundColor) {
            this.tg.setBackgroundColor('#667eea');
        }
        
        console.log('üé® –¢–µ–º–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞:', this.tg.colorScheme);
    }

    /**
     * –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≥–ª–∞–≤–Ω–æ–π –∫–Ω–æ–ø–∫–∏
     */
    setupMainButton() {
        this.tg.MainButton.setText('ü§ñ –û—Ç–∫—Ä—ã—Ç—å –±–æ—Ç–∞');
        this.tg.MainButton.color = '#4CAF50';
        this.tg.MainButton.textColor = '#ffffff';
        this.tg.MainButton.show();

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –ø–æ –≥–ª–∞–≤–Ω–æ–π –∫–Ω–æ–ø–∫–µ
        this.tg.MainButton.onClick(() => {
            this.openBot();
        });
        
        console.log('üîò –ì–ª–∞–≤–Ω–∞—è –∫–Ω–æ–ø–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞');
    }

    /**
     * –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥"
     */
    setupBackButton() {
        // –ö–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥ —Å–∫—Ä—ã—Ç–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        this.tg.BackButton.hide();
        
        this.tg.BackButton.onClick(() => {
            this.close();
        });
    }

    /**
     * –ù–∞—Å—Ç—Ä–æ–π–∫–∞ viewport
     */
    setupViewport() {
        if (this.tg.setViewportHeight) {
            this.tg.setViewportHeight('100vh');
        }
    }

    /**
     * –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
     */
    setupEventHandlers() {
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ—Ç –±–æ—Ç–∞
        this.tg.onEvent('mainButtonClicked', () => {
            console.log('üîò –ì–ª–∞–≤–Ω–∞—è –∫–Ω–æ–ø–∫–∞ –Ω–∞–∂–∞—Ç–∞');
        });

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–µ–º—ã
        this.tg.onEvent('themeChanged', () => {
            console.log('üé® –¢–µ–º–∞ –∏–∑–º–µ–Ω–µ–Ω–∞');
            this.setupTheme();
        });

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è viewport
        this.tg.onEvent('viewportChanged', (data) => {
            console.log('üì± Viewport –∏–∑–º–µ–Ω–µ–Ω:', data);
        });

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è –∑–∞–∫—Ä—ã—Ç–∏—è
        this.tg.onEvent('popupClosed', (data) => {
            console.log('‚ùå Popup –∑–∞–∫—Ä—ã—Ç:', data);
        });

        console.log('üì° –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã');
    }

    /**
     * –†–µ–∂–∏–º –±—Ä–∞—É–∑–µ—Ä–∞ (fallback)
     */
    initBrowserMode() {
        console.log('üåê –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä–µ–∂–∏–º–∞ –±—Ä–∞—É–∑–µ—Ä–∞');
        this.isReady = true;
        
        // –°–∏–º—É–ª–∏—Ä—É–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å WebApp
        setTimeout(() => {
            this.dispatchEvent('webapp:ready', { 
                user: null, 
                mode: 'browser' 
            });
        }, 100);
    }

    /**
     * –û—Ç–ø—Ä–∞–≤–∫–∞ –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç—É
     */
    sendCommand(command, data = {}) {
        if (!this.isReady) {
            this.showNotification('WebApp –Ω–µ –≥–æ—Ç–æ–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.', 'error');
            return Promise.reject('WebApp not ready');
        }

        const commandData = {
            type: 'command',
            command: command,
            data: data,
            source: 'webapp',
            timestamp: Date.now(),
            user_id: this.user?.id || null,
            webapp_version: '1.0.0'
        };

        console.log('üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –∫–æ–º–∞–Ω–¥—ã:', command, data);

        if (this.tg && this.tg.sendData) {
            try {
                // –¢–∞–∫—Ç–∏–ª—å–Ω–∞—è –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å
                this.hapticFeedback('medium');
                
                // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É –±–æ—Ç—É
                this.tg.sendData(JSON.stringify(commandData));
                
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
                this.showNotification('–ö–æ–º–∞–Ω–¥–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ –±–æ—Ç! üöÄ', 'success');
                
                // –ó–∞–∫—Ä—ã–≤–∞–µ–º WebApp –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
                if (this.shouldCloseAfterCommand(command)) {
                    setTimeout(() => {
                        this.close();
                    }, 1000);
                }
                
                return Promise.resolve();
                
            } catch (error) {
                console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–æ–º–∞–Ω–¥—ã:', error);
                this.showNotification('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–æ–º–∞–Ω–¥—ã', 'error');
                return Promise.reject(error);
            }
        } else {
            // Fallback –¥–ª—è –±—Ä–∞—É–∑–µ—Ä–∞
            this.showNotification('–û—Ç–∫—Ä–æ–π—Ç–µ –≤ Telegram: t.me/misterdms_presave_bot', 'info');
            setTimeout(() => {
                window.open('https://t.me/misterdms_presave_bot', '_blank');
            }, 1500);
            return Promise.resolve();
        }
    }

    /**
     * –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç, –Ω—É–∂–Ω–æ –ª–∏ –∑–∞–∫—Ä—ã–≤–∞—Ç—å WebApp –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã
     */
    shouldCloseAfterCommand(command) {
        const closeCommands = [
            '/ask_support@misterdms_presave_bot',
            '/claim_support@misterdms_presave_bot',
            '/help@misterdms_presave_bot',
            '/last10links@misterdms_presave_bot'
        ];
        
        return closeCommands.includes(command);
    }

    /**
     * –ó–∞–ø—Ä–æ—Å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —É –±–æ—Ç–∞
     */
    requestStats() {
        if (!this.isReady) return Promise.reject('WebApp not ready');

        const statsRequest = {
            type: 'get_stats',
            webapp: true,
            timestamp: Date.now(),
            user_id: this.user?.id || null
        };

        console.log('üìä –ó–∞–ø—Ä–æ—Å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏...');

        if (this.tg && this.tg.sendData) {
            try {
                this.tg.sendData(JSON.stringify(statsRequest));
                return Promise.resolve();
            } catch (error) {
                console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', error);
                return Promise.reject(error);
            }
        } else {
            console.log('üìä –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ');
            return Promise.resolve();
        }
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞ –æ—Ç –±–æ—Ç–∞
     */
    handleBotResponse(data) {
        try {
            const response = JSON.parse(data);
            console.log('üì® –û—Ç–≤–µ—Ç –æ—Ç –±–æ—Ç–∞:', response);
            
            switch (response.type) {
                case 'stats':
                    this.handleStatsResponse(response.data);
                    break;
                case 'user_info':
                    this.handleUserInfoResponse(response.data);
                    break;
                case 'command_result':
                    this.handleCommandResult(response);
                    break;
                case 'error':
                    this.showNotification(response.message || '–û—à–∏–±–∫–∞ –æ—Ç –±–æ—Ç–∞', 'error');
                    break;
                default:
                    console.log('‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø –æ—Ç–≤–µ—Ç–∞:', response.type);
            }
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—Ç–≤–µ—Ç–∞ –æ—Ç –±–æ—Ç–∞:', error);
        }
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
     */
    handleStatsResponse(stats) {
        console.log('üìä –ü–æ–ª—É—á–µ–Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:', stats);
        
        if (stats.users && window.animateCounter) {
            window.animateCounter('user-count', stats.users);
        }
        if (stats.support_requests && window.animateCounter) {
            window.animateCounter('support-count', stats.support_requests);
        }
        if (stats.karma_total && window.animateCounter) {
            window.animateCounter('karma-count', stats.karma_total);
        }
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        this.dispatchEvent('stats:updated', stats);
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
     */
    handleUserInfoResponse(userInfo) {
        console.log('üë§ –ü–æ–ª—É—á–µ–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ:', userInfo);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if (window.personalizeInterface) {
            window.personalizeInterface(userInfo);
        }
        
        this.dispatchEvent('user:updated', userInfo);
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –∫–æ–º–∞–Ω–¥—ã
     */
    handleCommandResult(result) {
        if (result.success) {
            this.showNotification(result.message || '–ö–æ–º–∞–Ω–¥–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ', 'success');
        } else {
            this.showNotification(result.message || '–û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã', 'error');
        }
    }

    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
     */
    showNotification(message, type = 'info') {
        console.log(`üì¢ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ (${type}):`, message);
        
        const container = document.getElementById('notification-container');
        if (!container) return;

        const notification = document.createElement('div');
        notification.className = `notification ${type}`;
        notification.textContent = message;
        
        container.appendChild(notification);
        
        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
        setTimeout(() => {
            notification.classList.add('hide');
            setTimeout(() => {
                if (notification.parentNode) {
                    notification.parentNode.removeChild(notification);
                }
            }, 300);
        }, 3000);
    }

    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å popup
     */
    showPopup(title, message, buttons = []) {
        if (this.tg && this.tg.showPopup) {
            this.tg.showPopup({
                title: title,
                message: message,
                buttons: buttons
            });
        } else {
            // Fallback –¥–ª—è –±—Ä–∞—É–∑–µ—Ä–∞
            alert(`${title}\n\n${message}`);
        }
    }

    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
     */
    showConfirm(message) {
        return new Promise((resolve) => {
            if (this.tg && this.tg.showConfirm) {
                this.tg.showConfirm(message, resolve);
            } else {
                // Fallback –¥–ª—è –±—Ä–∞—É–∑–µ—Ä–∞
                resolve(confirm(message));
            }
        });
    }

    /**
     * –¢–∞–∫—Ç–∏–ª—å–Ω–∞—è –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å
     */
    hapticFeedback(type = 'light') {
        if (this.tg && this.tg.HapticFeedback) {
            switch (type) {
                case 'light':
                    this.tg.HapticFeedback.impactOccurred('light');
                    break;
                case 'medium':
                    this.tg.HapticFeedback.impactOccurred('medium');
                    break;
                case 'heavy':
                    this.tg.HapticFeedback.impactOccurred('heavy');
                    break;
                case 'selection':
                    this.tg.HapticFeedback.selectionChanged();
                    break;
                case 'success':
                    this.tg.HapticFeedback.notificationOccurred('success');
                    break;
                case 'warning':
                    this.tg.HapticFeedback.notificationOccurred('warning');
                    break;
                case 'error':
                    this.tg.HapticFeedback.notificationOccurred('error');
                    break;
            }
        }
    }

    /**
     * –û—Ç–∫—Ä—ã—Ç—å –±–æ—Ç–∞
     */
    openBot() {
        console.log('ü§ñ –û—Ç–∫—Ä—ã—Ç–∏–µ –±–æ—Ç–∞...');
        
        try {
            if (this.tg && this.tg.openTelegramLink) {
                this.tg.openTelegramLink('https://t.me/misterdms_presave_bot');
            } else {
                window.open('https://t.me/misterdms_presave_bot', '_blank');
            }
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è –±–æ—Ç–∞:', error);
            window.open('https://t.me/misterdms_presave_bot', '_blank');
        }
    }

    /**
     * –û—Ç–∫—Ä—ã—Ç—å –≤–Ω–µ—à–Ω—é—é —Å—Å—ã–ª–∫—É
     */
    openLink(url) {
        console.log('üîó –û—Ç–∫—Ä—ã—Ç–∏–µ —Å—Å—ã–ª–∫–∏:', url);
        
        try {
            if (this.tg && this.tg.openLink) {
                this.tg.openLink(url);
            } else {
                window.open(url, '_blank');
            }
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è —Å—Å—ã–ª–∫–∏:', error);
            window.open(url, '_blank');
        }
    }

    /**
     * –ó–∞–∫—Ä—ã—Ç—å WebApp
     */
    close() {
        console.log('‚ùå –ó–∞–∫—Ä—ã—Ç–∏–µ WebApp...');
        
        if (this.tg && this.tg.close) {
            this.tg.close();
        } else {
            // Fallback –¥–ª—è –±—Ä–∞—É–∑–µ—Ä–∞
            if (window.history.length > 1) {
                window.history.back();
            } else {
                window.close();
            }
        }
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
     */
    getUserInfo() {
        return this.user;
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ä—Ç–æ–≤–æ–≥–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞
     */
    getStartParam() {
        return this.startParam;
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä–∫–∞, –∑–∞–ø—É—â–µ–Ω –ª–∏ WebApp –≤ Telegram
     */
    isTelegram() {
        return !!this.tg;
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ –≤–µ—Ä—Å–∏–∏ Telegram
     */
    getTelegramVersion() {
        return this.tg?.version || null;
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
     */
    getPlatform() {
        return this.tg?.platform || 'unknown';
    }

    /**
     * –û—Ç–ø—Ä–∞–≤–∫–∞ –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ —Å–æ–±—ã—Ç–∏—è
     */
    dispatchEvent(eventName, data = {}) {
        const event = new CustomEvent(eventName, { 
            detail: data 
        });
        document.dispatchEvent(event);
    }

    /**
     * –í–∫–ª—é—á–µ–Ω–∏–µ —Ä–µ–∂–∏–º–∞ –æ—Ç–ª–∞–¥–∫–∏
     */
    enableDebug() {
        this.isDebug = true;
        console.log('üêõ –†–µ–∂–∏–º –æ—Ç–ª–∞–¥–∫–∏ –≤–∫–ª—é—á–µ–Ω');
    }

    /**
     * –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–ª–∞–¥–æ—á–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
     */
    debug(...args) {
        if (this.isDebug) {
            console.log('üêõ [DEBUG]', ...args);
        }
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ WebApp
     */
    getWebAppInfo() {
        return {
            isReady: this.isReady,
            isTelegram: this.isTelegram(),
            user: this.user,
            startParam: this.startParam,
            version: this.getTelegramVersion(),
            platform: this.getPlatform(),
            colorScheme: this.tg?.colorScheme || 'light'
        };
    }
}

// –°–æ–∑–¥–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä
console.log('üéµ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram WebApp –¥–ª—è Do Presave Reminder Bot...');
window.telegramWebApp = new TelegramWebApp();

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª—è—Ö
if (typeof module !== 'undefined' && module.exports) {
    module.exports = TelegramWebApp;
}