#!/usr/bin/env python3
"""
üöÄ Do Presave Reminder Bot v25+ - Main Entry Point
–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è —Ç–æ—á–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å –ø–æ—ç—Ç–∞–ø–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–æ–π –º–æ–¥—É–ª–µ–π
"""

import os
import sys
import asyncio
import signal
import threading
import time
from datetime import datetime, timezone
from typing import Optional

# –°—Ç–æ—Ä–æ–Ω–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
import telebot
from telebot import types
import psutil

# –õ–æ–∫–∞–ª—å–Ω—ã–µ –º–æ–¥—É–ª–∏
from config import config, ConfigError
from database.manager import get_database_manager, DatabaseError
from utils.logger import get_logger, setup_main_logger
from utils.security import security_manager
from utils.helpers import MessageFormatter, SystemMonitor

# HTTP —Å–µ—Ä–≤–µ—Ä –∏ keep-alive
from webhooks.server import WebhookServer
from webhooks.keepalive import EnhancedKeepAlive as KeepAliveManager

# ============================================
# –û–°–ù–û–í–ù–´–ï –ö–û–ú–ü–û–ù–ï–ù–¢–´ –ü–õ–ê–ù 1
# ============================================

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
from handlers.menu import MenuManager
from handlers.commands import register_basic_commands
from handlers.callbacks import register_callback_handlers
from handlers.messages import MessageHandler
from handlers.links import LinkHandler

# ============================================
# –£–°–õ–û–í–ù–ê–Ø –ó–ê–ì–†–£–ó–ö–ê –ü–õ–ê–ù–û–í 2-4
# ============================================

# –ü–ª–∞–Ω 2 - –°–∏—Å—Ç–µ–º–∞ –∫–∞—Ä–º—ã (–∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è –ø—Ä–∏ ENABLE_PLAN_2_FEATURES=true)
if config.ENABLE_PLAN_2_FEATURES:
    from services.karma import KarmaManager, init_karma_system
    from handlers.karma_commands import register_karma_commands

# –ü–ª–∞–Ω 3 - –ò–ò –∏ —Ñ–æ—Ä–º—ã (–∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è –ø—Ä–∏ ENABLE_PLAN_3_FEATURES=true)  
if config.ENABLE_PLAN_3_FEATURES:
    from services.ai import AIManager, init_ai_system
    from services.gratitude import GratitudeDetector, init_gratitude_system
    from forms.form_manager import FormManager, init_forms_system
    from handlers.ai_handlers import register_ai_handlers
    from handlers.form_handlers import register_form_handlers

# –ü–ª–∞–Ω 4 - Backup —Å–∏—Å—Ç–µ–º–∞ (–∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è –í–°–ï–ì–î–ê –¥–ª—è PostgreSQL!)
if config.ENABLE_PLAN_4_FEATURES:
    from services.backup_restore import BackupRestoreManager, init_backup_manager
    from services.backup_scheduler import BackupScheduler, init_backup_scheduler
    from handlers.backup_commands import register_backup_commands

# ============================================
# –ì–õ–û–ë–ê–õ–¨–ù–´–ï –ü–ï–†–ï–ú–ï–ù–ù–´–ï
# ============================================

logger = get_logger(__name__)
bot: Optional[telebot.TeleBot] = None
webhook_server: Optional[WebhookServer] = None
keepalive_manager: Optional[KeepAliveManager] = None
shutdown_flag = threading.Event()

# –ú–µ–Ω–µ–¥–∂–µ—Ä—ã –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
database_manager = None
menu_manager = None
message_handler = None
link_handler = None

# –ú–µ–Ω–µ–¥–∂–µ—Ä—ã –ø–ª–∞–Ω–æ–≤ (—É—Å–ª–æ–≤–Ω—ã–µ)
karma_manager = None
ai_manager = None
gratitude_detector = None
form_manager = None
backup_manager = None
backup_scheduler = None

# ============================================
# –ö–õ–ê–°–° –û–°–ù–û–í–ù–û–ì–û –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø
# ============================================

class PresaveBotApplication:
    """–ì–ª–∞–≤–Ω—ã–π –∫–ª–∞—Å—Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –±–æ—Ç–∞"""
    
    def __init__(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
        self.start_time = datetime.now(timezone.utc)
        self.system_monitor = SystemMonitor()
        self.is_running = False
        
        logger.info("üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Do Presave Reminder Bot v25+")
        logger.info(f"üìÖ –í—Ä–µ–º—è –∑–∞–ø—É—Å–∫–∞: {self.start_time.strftime('%Y-%m-%d %H:%M:%S UTC')}")
        
    def initialize_bot(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram –±–æ—Ç–∞"""
        global bot
        
        try:
            logger.info("ü§ñ –°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ Telegram –±–æ—Ç–∞...")
            bot = telebot.TeleBot(config.BOT_TOKEN, threaded=True)
            
            # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ webhook –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
            if config.WEBHOOK_URL:
                logger.info(f"üîó –ù–∞—Å—Ç—Ä–æ–π–∫–∞ webhook: {config.WEBHOOK_URL}")
                bot.remove_webhook()
                bot.set_webhook(
                    url=config.WEBHOOK_URL,
                    secret_token=config.WEBHOOK_SECRET,
                    max_connections=config.WEBHOOK_MAX_CONNECTIONS
                )
            else:
                logger.info("üì° –†–µ–∂–∏–º polling (–±–µ–∑ webhook)")
                bot.remove_webhook()
            
            logger.info("‚úÖ Telegram –±–æ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
            return True
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–æ—Ç–∞: {e}")
            return False
    
    def initialize_database(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
        global database_manager
        
        try:
            logger.info("üóÑÔ∏è –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
            database_manager = get_database_manager()
            
            # –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü
            database_manager.init_database()
            
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
            if database_manager.test_connection():
                logger.info("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ –∏ –¥–æ—Å—Ç—É–ø–Ω–∞")
                
                # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ë–î
                stats = database_manager.get_database_stats()
                logger.info(f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ë–î: {stats.get('total_users', 0)} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, {stats.get('total_links', 0)} —Å—Å—ã–ª–æ–∫")
                
                return True
            else:
                logger.error("‚ùå –ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
                return False
                
        except DatabaseError as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {e}")
            return False
        except Exception as e:
            logger.error(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ë–î: {e}")
            return False
    
    def initialize_core_handlers(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ—Å–Ω–æ–≤–Ω—ã—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –ü–ª–∞–Ω 1"""
        global menu_manager, message_handler, link_handler
        
        try:
            logger.info("üéõÔ∏è –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ—Å–Ω–æ–≤–Ω—ã—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤...")
            
            # –ú–µ–Ω–µ–¥–∂–µ—Ä –º–µ–Ω—é
            menu_manager = MenuManager(bot)
            logger.info("‚úÖ MenuManager –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
            
            # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π
            message_handler = MessageHandler(bot)
            logger.info("‚úÖ MessageHandler –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
            
            # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å—Å—ã–ª–æ–∫
            link_handler = LinkHandler(bot)
            logger.info("‚úÖ LinkHandler –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
            
            # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –±–∞–∑–æ–≤—ã—Ö –∫–æ–º–∞–Ω–¥
            register_basic_commands(bot)
            logger.info("‚úÖ –ë–∞–∑–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã")
            
            # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ callback
            register_callback_handlers(bot)
            logger.info("‚úÖ Callback –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã")
            
            return True
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤: {e}")
            return False
    
    def initialize_plan_2_features(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ñ—É–Ω–∫—Ü–∏–π –ü–ª–∞–Ω 2 - –°–∏—Å—Ç–µ–º–∞ –∫–∞—Ä–º—ã"""
        if not config.ENABLE_PLAN_2_FEATURES:
            logger.info("‚è≠Ô∏è –ü–ª–∞–Ω 2 –æ—Ç–∫–ª—é—á–µ–Ω (ENABLE_PLAN_2_FEATURES=false)")
            return True
            
        global karma_manager
        
        try:
            logger.info("üèÜ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –∫–∞—Ä–º—ã (–ü–ª–∞–Ω 2)...")
            
            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –∫–∞—Ä–º—ã
            karma_manager = init_karma_system(database_manager)
            logger.info("‚úÖ KarmaManager –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
            
            # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∫–æ–º–∞–Ω–¥ –∫–∞—Ä–º—ã
            register_karma_commands(bot, karma_manager)
            logger.info("‚úÖ –ö–æ–º–∞–Ω–¥—ã –∫–∞—Ä–º—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã")
            
            logger.info("üéâ –ü–ª–∞–Ω 2 (–°–∏—Å—Ç–µ–º–∞ –∫–∞—Ä–º—ã) –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω")
            return True
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ü–ª–∞–Ω 2: {e}")
            return False
    
    def initialize_plan_3_features(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ñ—É–Ω–∫—Ü–∏–π –ü–ª–∞–Ω 3 - –ò–ò –∏ —Ñ–æ—Ä–º—ã"""
        if not config.ENABLE_PLAN_3_FEATURES:
            logger.info("‚è≠Ô∏è –ü–ª–∞–Ω 3 –æ—Ç–∫–ª—é—á–µ–Ω (ENABLE_PLAN_3_FEATURES=false)")
            return True
            
        global ai_manager, gratitude_detector, form_manager
        
        try:
            logger.info("ü§ñ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ò–ò –∏ —Ñ–æ—Ä–º (–ü–ª–∞–Ω 3)...")
            
            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ò–ò —Å–∏—Å—Ç–µ–º—ã
            ai_manager = init_ai_system()
            logger.info("‚úÖ AIManager –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
            
            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–µ—Ç–µ–∫—Ç–æ—Ä–∞ –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–µ–π
            gratitude_detector = init_gratitude_system(database_manager, karma_manager if config.ENABLE_PLAN_2_FEATURES else None)
            logger.info("‚úÖ GratitudeDetector –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
            
            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã —Ñ–æ—Ä–º
            form_manager = init_forms_system(database_manager)
            logger.info("‚úÖ FormManager –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
            
            # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –ò–ò
            register_ai_handlers(bot, ai_manager)
            logger.info("‚úÖ –ò–ò –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã")
            
            # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Ñ–æ—Ä–º
            register_form_handlers(bot, form_manager)
            logger.info("‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Ñ–æ—Ä–º –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã")
            
            logger.info("üéâ –ü–ª–∞–Ω 3 (–ò–ò –∏ —Ñ–æ—Ä–º—ã) –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω")
            return True
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ü–ª–∞–Ω 3: {e}")
            return False
    
    def initialize_plan_4_features(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ñ—É–Ω–∫—Ü–∏–π –ü–ª–∞–Ω 4 - Backup —Å–∏—Å—Ç–µ–º–∞"""
        if not config.ENABLE_PLAN_4_FEATURES:
            logger.warning("‚ö†Ô∏è –ü–ª–∞–Ω 4 –æ—Ç–∫–ª—é—á–µ–Ω - –ö–†–ò–¢–ò–ß–ù–û –¥–ª—è PostgreSQL!")
            return True
            
        global backup_manager, backup_scheduler
        
        try:
            logger.info("üíæ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è backup —Å–∏—Å—Ç–µ–º—ã (–ü–ª–∞–Ω 4)...")
            
            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è backup –º–µ–Ω–µ–¥–∂–µ—Ä–∞
            backup_manager = init_backup_manager(database_manager)
            logger.info("‚úÖ BackupRestoreManager –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
            
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–æ–∑—Ä–∞—Å—Ç–∞ –ë–î
            age_days = backup_manager.get_database_age_days()
            days_left = backup_manager.days_until_expiry()
            
            if days_left <= 5:
                logger.warning(f"üö® –ö–†–ò–¢–ò–ß–ù–û! –ë–î –∏—Å—Ç–µ—á–µ—Ç —á–µ—Ä–µ–∑ {days_left} –¥–Ω–µ–π (–≤–æ–∑—Ä–∞—Å—Ç: {age_days} –¥–Ω–µ–π)")
            elif days_left <= 10:
                logger.warning(f"‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ! –ë–î –∏—Å—Ç–µ—á–µ—Ç —á–µ—Ä–µ–∑ {days_left} –¥–Ω–µ–π (–≤–æ–∑—Ä–∞—Å—Ç: {age_days} –¥–Ω–µ–π)")
            else:
                logger.info(f"‚úÖ –ë–î –≤ –Ω–æ—Ä–º–µ: –æ—Å—Ç–∞–ª–æ—Å—å {days_left} –¥–Ω–µ–π (–≤–æ–∑—Ä–∞—Å—Ç: {age_days} –¥–Ω–µ–π)")
            
            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞
            backup_scheduler = init_backup_scheduler(bot)
            logger.info("‚úÖ BackupScheduler –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
            
            # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è backup –∫–æ–º–∞–Ω–¥
            register_backup_commands(bot, backup_manager)
            logger.info("‚úÖ Backup –∫–æ–º–∞–Ω–¥—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã")
            
            logger.info("üéâ –ü–ª–∞–Ω 4 (Backup —Å–∏—Å—Ç–µ–º–∞) –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω")
            return True
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ü–ª–∞–Ω 4: {e}")
            return False
    
    def initialize_http_server(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è HTTP —Å–µ—Ä–≤–µ—Ä–∞"""
        global webhook_server
        
        try:
            logger.info("üåê –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è HTTP —Å–µ—Ä–≤–µ—Ä–∞...")
            
            # –°–æ–∑–¥–∞–Ω–∏–µ webhook —Å–µ—Ä–≤–µ—Ä–∞
            webhook_server = WebhookServer(
                bot=bot,
                port=config.PORT,
                host=config.HOST,
                webhook_path=config.WEBHOOK_PATH,
                webhook_secret=config.WEBHOOK_SECRET
            )
            
            # –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
            server_thread = threading.Thread(
                target=webhook_server.start_server,
                daemon=True,
                name="WebhookServer"
            )
            server_thread.start()
            
            logger.info(f"‚úÖ HTTP —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ {config.HOST}:{config.PORT}")
            return True
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ HTTP —Å–µ—Ä–≤–µ—Ä–∞: {e}")
            return False
    
    def initialize_keepalive(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è keep-alive –¥–ª—è Render.com"""
        global keepalive_manager
        
        try:
            logger.info("üíì –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è keep-alive —Å–∏—Å—Ç–µ–º—ã...")
            
            # –°–æ–∑–¥–∞–Ω–∏–µ keep-alive –º–µ–Ω–µ–¥–∂–µ—Ä–∞
            keepalive_manager = KeepAliveManager(
                target_url=config.KEEPALIVE_URL or f"https://{config.HOST}:{config.PORT}/health",
                interval=config.KEEPALIVE_INTERVAL,
                enabled=config.KEEPALIVE_ENABLED
            )
            
            # –ó–∞–ø—É—Å–∫ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
            if keepalive_manager.enabled:
                keepalive_thread = threading.Thread(
                    target=keepalive_manager.start_keepalive,
                    daemon=True,
                    name="KeepAlive"
                )
                keepalive_thread.start()
                logger.info(f"‚úÖ Keep-alive –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω (–∏–Ω—Ç–µ—Ä–≤–∞–ª: {config.KEEPALIVE_INTERVAL}—Å)")
            else:
                logger.info("‚è≠Ô∏è Keep-alive –æ—Ç–∫–ª—é—á–µ–Ω")
            
            return True
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ keep-alive: {e}")
            return False
    
    def start_bot(self):
        """–ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ –±–æ—Ç–∞"""
        try:
            self.is_running = True
            logger.info("üîÑ –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ –±–æ—Ç–∞...")
            
            if config.WEBHOOK_URL:
                logger.info("üì° –†–µ–∂–∏–º webhook - –æ–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–æ–≤...")
                # –í —Ä–µ–∂–∏–º–µ webhook –ø—Ä–æ—Å—Ç–æ –∂–¥–µ–º
                while self.is_running and not shutdown_flag.is_set():
                    time.sleep(1)
            else:
                logger.info("üì° –†–µ–∂–∏–º polling - –Ω–∞—á–∏–Ω–∞–µ–º –æ–ø—Ä–æ—Å...")
                # –í —Ä–µ–∂–∏–º–µ polling –∞–∫—Ç–∏–≤–Ω–æ –æ–ø—Ä–∞—à–∏–≤–∞–µ–º
                bot.polling(
                    none_stop=True,
                    interval=config.POLLING_INTERVAL,
                    timeout=config.POLLING_TIMEOUT
                )
                
        except KeyboardInterrupt:
            logger.info("‚å®Ô∏è –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –æ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã")
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º —Ü–∏–∫–ª–µ: {e}")
        finally:
            self.shutdown()
    
    def shutdown(self):
        """–ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã"""
        logger.info("üîÑ –ù–∞—á–∏–Ω–∞–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã...")
        
        self.is_running = False
        shutdown_flag.set()
        
        try:
            # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ webhook —Å–µ—Ä–≤–µ—Ä–∞
            if webhook_server:
                webhook_server.shutdown()
                logger.info("‚úÖ HTTP —Å–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
            
            # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ keep-alive
            if keepalive_manager:
                keepalive_manager.stop()
                logger.info("‚úÖ Keep-alive –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
            
            # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ backup
            if backup_scheduler and config.ENABLE_PLAN_4_FEATURES:
                backup_scheduler.stop_scheduler()
                logger.info("‚úÖ Backup –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
            
            # –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î
            if database_manager:
                database_manager.close_connection()
                logger.info("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î –∑–∞–∫—Ä—ã—Ç–æ")
            
            # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞
            if bot:
                bot.stop_polling()
                logger.info("‚úÖ –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
            
            uptime = datetime.now(timezone.utc) - self.start_time
            logger.info(f"‚è±Ô∏è –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: {uptime}")
            logger.info("üëã Do Presave Reminder Bot –∑–∞–≤–µ—Ä—à–∏–ª —Ä–∞–±–æ—Ç—É")
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏: {e}")

# ============================================
# –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –°–ò–ì–ù–ê–õ–û–í
# ============================================

def signal_handler(signum, frame):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–∏–≥–Ω–∞–ª–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è"""
    logger.info(f"üì® –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª {signum}")
    shutdown_flag.set()

# ============================================
# –§–£–ù–ö–¶–ò–Ø MAIN
# ============================================

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
    setup_main_logger()
    
    # –í—ã–≤–æ–¥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∑–∞–ø—É—Å–∫–µ
    logger.info("=" * 60)
    logger.info("üéµ DO PRESAVE REMINDER BOT v25+ üéµ")
    logger.info("–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –≤–∑–∞–∏–º–Ω—ã—Ö –ø—Ä–µ—Å–µ–π–≤–æ–≤ –≤ –º—É–∑—ã–∫–∞–ª—å–Ω–æ–º —Å–æ–æ–±—â–µ—Å—Ç–≤–µ")
    logger.info(f"–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫: @Mister_DMS")
    logger.info(f"–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞: –ú–æ–¥—É–ª—å–Ω–∞—è (4 –ø–ª–∞–Ω–∞ —Ä–∞–∑–≤–∏—Ç–∏—è)")
    logger.info(f"–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: PostgreSQL")
    logger.info(f"–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞: Render.com + UptimeRobot")
    logger.info("=" * 60)
    
    try:
        # –í–∞–ª–∏–¥–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        logger.info("üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...")
        logger.info(f"üìä –ü–ª–∞–Ω—ã: –ü–ª–∞–Ω1=‚úÖ –ü–ª–∞–Ω2={'‚úÖ' if config.ENABLE_PLAN_2_FEATURES else '‚ùå'} –ü–ª–∞–Ω3={'‚úÖ' if config.ENABLE_PLAN_3_FEATURES else '‚ùå'} –ü–ª–∞–Ω4={'‚úÖ' if config.ENABLE_PLAN_4_FEATURES else '‚ùå'}")
        logger.info(f"üóÑÔ∏è –ë–î: {config.DATABASE_URL.split('@')[1] if '@' in config.DATABASE_URL else '–ª–æ–∫–∞–ª—å–Ω–∞—è'}")
        logger.info(f"üîó Webhook: {'–≤–∫–ª—é—á–µ–Ω' if config.WEBHOOK_URL else '–æ—Ç–∫–ª—é—á–µ–Ω (polling)'}")
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        app = PresaveBotApplication()
        
        # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–∏–≥–Ω–∞–ª–æ–≤
        signal.signal(signal.SIGINT, signal_handler)
        signal.signal(signal.SIGTERM, signal_handler)
        
        # –ü–æ—à–∞–≥–æ–≤–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
        logger.info("üöÄ –ù–∞—á–∏–Ω–∞–µ–º –ø–æ—à–∞–≥–æ–≤—É—é –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é...")
        
        # –®–∞–≥ 1: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
        if not app.initialize_bot():
            logger.error("üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –±–æ—Ç–∞")
            sys.exit(1)
        
        # –®–∞–≥ 2: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        if not app.initialize_database():
            logger.error("üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ë–î")
            sys.exit(1)
        
        # –®–∞–≥ 3: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ—Å–Ω–æ–≤–Ω—ã—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
        if not app.initialize_core_handlers():
            logger.error("üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏")
            sys.exit(1)
        
        # –®–∞–≥ 4: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ü–ª–∞–Ω 2 (–µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω)
        if not app.initialize_plan_2_features():
            logger.error("üí• –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ü–ª–∞–Ω 2")
            sys.exit(1)
        
        # –®–∞–≥ 5: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ü–ª–∞–Ω 3 (–µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω)
        if not app.initialize_plan_3_features():
            logger.error("üí• –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ü–ª–∞–Ω 3")
            sys.exit(1)
        
        # –®–∞–≥ 6: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ü–ª–∞–Ω 4 (–µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω)
        if not app.initialize_plan_4_features():
            logger.error("üí• –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ü–ª–∞–Ω 4")
            sys.exit(1)
        
        # –®–∞–≥ 7: –ó–∞–ø—É—Å–∫ HTTP —Å–µ—Ä–≤–µ—Ä–∞
        if not app.initialize_http_server():
            logger.error("üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å HTTP —Å–µ—Ä–≤–µ—Ä")
            sys.exit(1)
        
        # –®–∞–≥ 8: –ó–∞–ø—É—Å–∫ keep-alive
        if not app.initialize_keepalive():
            logger.error("üí• –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ keep-alive")
            # –ù–µ –∫—Ä–∏—Ç–∏—á–Ω–æ, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º
        
        # –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
        logger.info("üèÅ –í—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        
        # –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∞–º
        try:
            for admin_id in config.ADMIN_IDS:
                bot.send_message(
                    admin_id,
                    f"""üöÄ **Bot started successfully!**
                    
üìä **Status:**
‚Ä¢ Version: v25+
‚Ä¢ Database: Connected ‚úÖ
‚Ä¢ Plans: {f'1‚úÖ 2{"‚úÖ" if config.ENABLE_PLAN_2_FEATURES else "‚ùå"} 3{"‚úÖ" if config.ENABLE_PLAN_3_FEATURES else "‚ùå"} 4{"‚úÖ" if config.ENABLE_PLAN_4_FEATURES else "‚ùå"}'}
‚Ä¢ Mode: {'Webhook' if config.WEBHOOK_URL else 'Polling'}

üéØ Ready to help musicians with presaves!""",
                    parse_mode='Markdown'
                )
        except Exception as e:
            logger.warning(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∞–º: {e}")
        
        # –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ü–∏–∫–ª–∞
        logger.info("üéâ –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞! –£–¥–∞—á–Ω—ã—Ö –ø—Ä–µ—Å–µ–π–≤–æ–≤! üéµ")
        app.start_bot()
        
    except ConfigError as e:
        logger.error(f"‚öôÔ∏è –û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
        sys.exit(1)
    except KeyboardInterrupt:
        logger.info("‚å®Ô∏è –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–æ –∑–∞–ø—Ä–æ—Å—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
    except Exception as e:
        logger.error(f"üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        sys.exit(1)

# ============================================
# –¢–û–ß–ö–ê –í–•–û–î–ê
# ============================================

if __name__ == "__main__":
    main()
