#!/usr/bin/env python3
"""
Do Presave Reminder Bot v25+ - –ì–ª–∞–≤–Ω—ã–π —Ñ–∞–π–ª –∑–∞–ø—É—Å–∫–∞
–ú–æ–¥—É–ª—å–Ω–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ —Å –ø–æ—ç—Ç–∞–ø–Ω—ã–º —Ä–∞–∑–≤–∏—Ç–∏–µ–º —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞

–ü–õ–ê–ù 1: –ë–∞–∑–æ–≤—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª (–ê–ö–¢–ò–í–ï–ù)
–ü–õ–ê–ù 2: –°–∏—Å—Ç–µ–º–∞ –∫–∞—Ä–º—ã (–ó–ê–ì–õ–£–®–ö–ò)  
–ü–õ–ê–ù 3: –ò–ò –∏ —Ñ–æ—Ä–º—ã (–ó–ê–ì–õ–£–®–ö–ò)
–ü–õ–ê–ù 4: Backup —Å–∏—Å—Ç–µ–º–∞ (–ó–ê–ì–õ–£–®–ö–ò)
"""

import os
import sys
import time
import threading
from typing import Optional

# –û—Å–Ω–æ–≤–Ω—ã–µ –∏–º–ø–æ—Ä—Ç—ã
import telebot
from telebot.types import Message, CallbackQuery

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∏ —É—Ç–∏–ª–∏—Ç—ã
from config import Config, validate_config
from utils.logger import get_logger, setup_logging
from utils.security import SecurityManager
from utils.helpers import format_user_mention

# –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
from database.manager import DatabaseManager
from database.models import init_database_models

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –ü–õ–ê–ù 1 (–ê–ö–¢–ò–í–ù–´–ï)
from handlers.menu import MenuHandler
from handlers.commands import CommandHandler  
from handlers.callbacks import CallbackHandler
from handlers.messages import MessageHandler
from handlers.links import LinkHandler

# –ü–õ–ê–ù 2: –°–∏—Å—Ç–µ–º–∞ –∫–∞—Ä–º—ã (–ó–ê–ì–õ–£–®–ö–ò)
# from services.karma import KarmaManager, init_karma_system
# from database.analytics import AnalyticsManager

# –ü–õ–ê–ù 3: –ò–ò –∏ —Ñ–æ—Ä–º—ã (–ó–ê–ì–õ–£–®–ö–ò)
# from services.ai import AIManager, init_ai_system
# from services.gratitude import GratitudeDetector, init_gratitude_system
# from services.forms import FormManager, init_forms_system
# from handlers.ai_handlers import AIHandler
# from handlers.form_handlers import FormHandler

# –ü–õ–ê–ù 4: Backup —Å–∏—Å—Ç–µ–º–∞ (–ó–ê–ì–õ–£–®–ö–ò)
# from services.backup_restore import BackupRestoreManager, init_backup_manager
# from services.backup_scheduler import BackupScheduler, init_backup_scheduler
# from handlers.backup_commands import BackupCommandHandler

# HTTP —Å–µ—Ä–≤–µ—Ä –∏ keep-alive
from webhooks.server import WebhookServer
from webhooks.keepalive import KeepAliveManager

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logger = get_logger(__name__)

class PresaveBot:
    """–û—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞—Å—Å –±–æ—Ç–∞ —Å –º–æ–¥—É–ª—å–Ω–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–æ–π"""
    
    def __init__(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞"""
        self.bot: Optional[telebot.TeleBot] = None
        self.config: Optional[Config] = None
        self.db_manager: Optional[DatabaseManager] = None
        
        # –ú–µ–Ω–µ–¥–∂–µ—Ä—ã –º–æ–¥—É–ª–µ–π –ü–õ–ê–ù 1 (–ê–ö–¢–ò–í–ù–´–ï)
        self.security_manager: Optional[SecurityManager] = None
        self.menu_handler: Optional[MenuHandler] = None
        self.command_handler: Optional[CommandHandler] = None
        self.callback_handler: Optional[CallbackHandler] = None
        self.message_handler: Optional[MessageHandler] = None
        self.link_handler: Optional[LinkHandler] = None
        
        # HTTP —Å–µ—Ä–≤–µ—Ä –∏ keep-alive
        self.webhook_server: Optional[WebhookServer] = None
        self.keepalive_manager: Optional[KeepAliveManager] = None
        
        # –ü–õ–ê–ù 2: –°–∏—Å—Ç–µ–º–∞ –∫–∞—Ä–º—ã (–ó–ê–ì–õ–£–®–ö–ò)
        # self.karma_manager: Optional[KarmaManager] = None
        # self.analytics_manager: Optional[AnalyticsManager] = None
        
        # –ü–õ–ê–ù 3: –ò–ò –∏ —Ñ–æ—Ä–º—ã (–ó–ê–ì–õ–£–®–ö–ò)
        # self.ai_manager: Optional[AIManager] = None
        # self.gratitude_detector: Optional[GratitudeDetector] = None
        # self.form_manager: Optional[FormManager] = None
        # self.ai_handler: Optional[AIHandler] = None
        # self.form_handler: Optional[FormHandler] = None
        
        # –ü–õ–ê–ù 4: Backup —Å–∏—Å—Ç–µ–º–∞ (–ó–ê–ì–õ–£–®–ö–ò)
        # self.backup_manager: Optional[BackupRestoreManager] = None
        # self.backup_scheduler: Optional[BackupScheduler] = None
        # self.backup_handler: Optional[BackupCommandHandler] = None
        
        self.is_running = False
        
    def initialize(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –±–æ—Ç–∞"""
        logger.info("üöÄ –ù–∞—á–∏–Ω–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é Do Presave Reminder Bot v25+...")
        
        try:
            # 1. –ó–∞–≥—Ä—É–∑–∫–∞ –∏ –≤–∞–ª–∏–¥–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
            self._init_config()
            
            # 2. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
            self._init_bot()
            
            # 3. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
            self._init_database()
            
            # 4. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
            self._init_security()
            
            # 5. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –ü–õ–ê–ù 1
            self._init_plan1_handlers()
            
            # 6. –ü–õ–ê–ù 2: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –∫–∞—Ä–º—ã (–ó–ê–ì–õ–£–®–ö–ò)
            # self._init_plan2_karma()
            
            # 7. –ü–õ–ê–ù 3: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ò–ò –∏ —Ñ–æ—Ä–º (–ó–ê–ì–õ–£–®–ö–ò)
            # self._init_plan3_ai_forms()
            
            # 8. –ü–õ–ê–ù 4: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è backup —Å–∏—Å—Ç–µ–º—ã (–ó–ê–ì–õ–£–®–ö–ò)
            # self._init_plan4_backup()
            
            # 9. –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
            self._register_handlers()
            
            # 10. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è HTTP —Å–µ—Ä–≤–µ—Ä–∞ –∏ keep-alive
            self._init_webhook_keepalive()
            
            logger.info("‚úÖ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
            self.is_running = True
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏: {e}")
            sys.exit(1)
    
    def _init_config(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
        logger.info("üîß –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...")
        
        self.config = Config()
        
        # –í–∞–ª–∏–¥–∞—Ü–∏—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
        if not validate_config():
            logger.error("‚ùå –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–µ –ø—Ä–æ—à–ª–∞ –≤–∞–ª–∏–¥–∞—Ü–∏—é!")
            sys.exit(1)
            
        logger.info("‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞ –∏ –≤–∞–ª–∏–¥–∏—Ä–æ–≤–∞–Ω–∞")
    
    def _init_bot(self):
            """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram –±–æ—Ç–∞"""
            logger.info("ü§ñ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram –±–æ—Ç–∞...")
            
            self.bot = telebot.TeleBot(
                self.config.BOT_TOKEN,
                parse_mode='HTML',
                threaded=True
            )
            
            logger.info("‚úÖ Telegram –±–æ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
    
    def _init_database(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
        logger.info("üóÉÔ∏è –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
        
        self.db_manager = DatabaseManager(self.config.DATABASE_URL)
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥–µ–ª–µ–π –ë–î
        init_database_models(self.db_manager.engine)
        
        # –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç
        self.db_manager.create_tables()
        
        logger.info("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
    
    def _init_security(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏"""
        logger.info("üõ°Ô∏è –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏...")
        
        self.security_manager = SecurityManager(
            admin_ids=self.config.ADMIN_IDS,
            whitelist_threads=self.config.WHITELIST
        )
        
        logger.info("‚úÖ –°–∏—Å—Ç–µ–º–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
    
    def _init_plan1_handlers(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –ü–õ–ê–ù 1 (–ê–ö–¢–ò–í–ù–´–ï)"""
        logger.info("üì± –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –ü–õ–ê–ù 1...")
        
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –º–µ–Ω—é
        self.menu_handler = MenuHandler(self.bot, self.db_manager, self.security_manager)
        
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥
        self.command_handler = CommandHandler(self.bot, self.db_manager, self.security_manager)
        
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback'–æ–≤ (–∫–Ω–æ–ø–∫–∏)
        self.callback_handler = CallbackHandler(self.bot, self.db_manager, self.security_manager)
        
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π
        self.message_handler = MessageHandler(self.bot, self.db_manager, self.security_manager)
        
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å—Å—ã–ª–æ–∫
        self.link_handler = LinkHandler(self.bot, self.db_manager, self.security_manager, self.config)
        
        logger.info("‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –ü–õ–ê–ù 1 –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã")
    
    # def _init_plan2_karma(self):
    #     """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –∫–∞—Ä–º—ã –ü–õ–ê–ù 2 (–ó–ê–ì–õ–£–®–ö–ê)"""
    #     if not self.config.ENABLE_PLAN_2_FEATURES:
    #         logger.info("‚è∏Ô∏è –ü–õ–ê–ù 2 (–∫–∞—Ä–º–∞) –æ—Ç–∫–ª—é—á–µ–Ω —á–µ—Ä–µ–∑ feature flag")
    #         return
    #         
    #     logger.info("üèÜ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –∫–∞—Ä–º—ã –ü–õ–ê–ù 2...")
    #     
    #     # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∫–∞—Ä–º—ã
    #     self.karma_manager = KarmaManager(self.db_manager, self.config)
    #     init_karma_system(self.karma_manager)
    #     
    #     # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
    #     self.analytics_manager = AnalyticsManager(self.db_manager)
    #     
    #     logger.info("‚úÖ –°–∏—Å—Ç–µ–º–∞ –∫–∞—Ä–º—ã –ü–õ–ê–ù 2 –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
    
    # def _init_plan3_ai_forms(self):
    #     """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ò–ò –∏ —Ñ–æ—Ä–º –ü–õ–ê–ù 3 (–ó–ê–ì–õ–£–®–ö–ê)"""
    #     if not self.config.ENABLE_PLAN_3_FEATURES:
    #         logger.info("‚è∏Ô∏è –ü–õ–ê–ù 3 (–ò–ò + —Ñ–æ—Ä–º—ã) –æ—Ç–∫–ª—é—á–µ–Ω —á–µ—Ä–µ–∑ feature flag")
    #         return
    #         
    #     logger.info("ü§ñ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ò–ò –∏ —Ñ–æ—Ä–º –ü–õ–ê–ù 3...")
    #     
    #     # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ò–ò
    #     if self.config.AI_ENABLED:
    #         self.ai_manager = AIManager(self.config)
    #         init_ai_system(self.ai_manager)
    #         
    #         # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –ò–ò
    #         self.ai_handler = AIHandler(self.bot, self.ai_manager, self.security_manager)
    #     
    #     # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–µ—Ç–µ–∫—Ç–æ—Ä–∞ –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–µ–π
    #     if self.config.AUTO_KARMA_ENABLED:
    #         self.gratitude_detector = GratitudeDetector(self.db_manager, self.karma_manager)
    #         init_gratitude_system(self.gratitude_detector)
    #     
    #     # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã —Ñ–æ—Ä–º
    #     if self.config.FORMS_ENABLED:
    #         self.form_manager = FormManager(self.db_manager, self.config)
    #         init_forms_system(self.form_manager)
    #         
    #         # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Ñ–æ—Ä–º
    #         self.form_handler = FormHandler(self.bot, self.form_manager, self.security_manager)
    #     
    #     logger.info("‚úÖ –ò–ò –∏ —Ñ–æ—Ä–º—ã –ü–õ–ê–ù 3 –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã")
    
    # def _init_plan4_backup(self):
    #     """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è backup —Å–∏—Å—Ç–µ–º—ã –ü–õ–ê–ù 4 (–ó–ê–ì–õ–£–®–ö–ê)"""
    #     if not self.config.ENABLE_PLAN_4_FEATURES:
    #         logger.info("‚è∏Ô∏è –ü–õ–ê–ù 4 (backup) –æ—Ç–∫–ª—é—á–µ–Ω —á–µ—Ä–µ–∑ feature flag")
    #         return
    #         
    #     logger.info("üíæ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è backup —Å–∏—Å—Ç–µ–º—ã –ü–õ–ê–ù 4...")
    #     
    #     # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞ backup
    #     self.backup_manager = BackupRestoreManager(self.db_manager, self.config)
    #     init_backup_manager(self.backup_manager)
    #     
    #     # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞
    #     if self.config.AUTO_BACKUP_ENABLED:
    #         self.backup_scheduler = BackupScheduler(self.bot, self.backup_manager, self.config)
    #         init_backup_scheduler(self.backup_scheduler)
    #     
    #     # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ backup –∫–æ–º–∞–Ω–¥
    #     self.backup_handler = BackupCommandHandler(self.bot, self.backup_manager, self.security_manager)
    #     
    #     logger.info("‚úÖ Backup —Å–∏—Å—Ç–µ–º–∞ –ü–õ–ê–ù 4 –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
    
    def _register_handlers(self):
        """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤—Å–µ—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤"""
        logger.info("üìù –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–æ–±—â–µ–Ω–∏–π...")
        
        # –ü–õ–ê–ù 1: –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ—Å–Ω–æ–≤–Ω—ã—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ (–ê–ö–¢–ò–í–ù–´–ï)
        self.command_handler.register_handlers()
        self.callback_handler.register_handlers()
        self.message_handler.register_handlers()
        
        # –ü–õ–ê–ù 2: –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–∞—Ä–º—ã (–ó–ê–ì–õ–£–®–ö–ò)
        # if self.karma_manager:
        #     self.karma_manager.register_handlers()
        
        # –ü–õ–ê–ù 3: –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ò–ò –∏ —Ñ–æ—Ä–º (–ó–ê–ì–õ–£–®–ö–ò)  
        # if self.ai_handler:
        #     self.ai_handler.register_handlers()
        # if self.form_handler:
        #     self.form_handler.register_handlers()
        
        # –ü–õ–ê–ù 4: –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è backup –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ (–ó–ê–ì–õ–£–®–ö–ò)
        # if self.backup_handler:
        #     self.backup_handler.register_handlers()
        
        logger.info("‚úÖ –í—Å–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã")
    
    def _init_webhook_keepalive(self):
            """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è HTTP —Å–µ—Ä–≤–µ—Ä–∞ –∏ keep-alive"""
            logger.info("üåê –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è webhook —Å–µ—Ä–≤–µ—Ä–∞ –∏ keep-alive...")
            
            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è keep-alive –º–µ–Ω–µ–¥–∂–µ—Ä–∞
            self.keepalive_manager = KeepAliveManager(
                external_url=self.config.RENDER_EXTERNAL_URL,
                interval=self.config.KEEPALIVE_INTERVAL
            )
            
            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è webhook —Å–µ—Ä–≤–µ—Ä–∞
            if self.config.RENDER_EXTERNAL_URL:
                self.webhook_server = WebhookServer(
                    bot=self.bot,
                    webhook_secret=self.config.WEBHOOK_SECRET,
                    host=self.config.HOST,
                    port=int(os.getenv('PORT', 8080))
                )
                
                # –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
                server_thread = threading.Thread(
                    target=self.webhook_server.start_server,
                    daemon=True
                )
                server_thread.start()
                
                # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞
                logger.info("‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ HTTP —Å–µ—Ä–≤–µ—Ä–∞...")
                time.sleep(5)
                
                # –¢–µ–ø–µ—Ä—å —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º webhook
                try:
                    webhook_url = f"https://{self.config.RENDER_EXTERNAL_URL}/webhook"
                    logger.info(f"üîó –£—Å—Ç–∞–Ω–æ–≤–∫–∞ webhook: {webhook_url}")
                    
                    self.bot.remove_webhook()
                    time.sleep(2)
                    self.bot.set_webhook(webhook_url)
                    logger.info(f"‚úÖ Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ: {webhook_url}")
                    
                except Exception as e:
                    logger.error(f"‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ webhook: {e}")
                    logger.info("üîÑ –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ polling —Ä–µ–∂–∏–º...")
                    self.config.RENDER_EXTERNAL_URL = None  # –û—Ç–∫–ª—é—á–∞–µ–º webhook
            else:
                logger.info("‚úÖ –†–µ–∂–∏–º polling (–±–µ–∑ webhook)")
                
            # –ó–∞–ø—É—Å–∫ keep-alive –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
            keepalive_thread = threading.Thread(
                target=self.keepalive_manager.start_keepalive,
                daemon=True
            )
            keepalive_thread.start()
            
            logger.info("‚úÖ Webhook —Å–µ—Ä–≤–µ—Ä –∏ keep-alive –∑–∞–ø—É—â–µ–Ω—ã")
    
    def run(self):
        """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
        if not self.is_running:
            logger.error("‚ùå –ë–æ—Ç –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω!")
            return
            
        logger.info("üöÄ –ó–∞–ø—É—Å–∫ Do Presave Reminder Bot v25+...")
        
        try:
            if self.config.RENDER_EXTERNAL_URL:
                # –†–µ–∂–∏–º webhook - –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª
                logger.info("üåê –†–µ–∂–∏–º webhook - –æ–∂–∏–¥–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π...")
                while True:
                    time.sleep(1)
            else:
                # –†–µ–∂–∏–º polling
                logger.info("üì° –†–µ–∂–∏–º polling - –∑–∞–ø—É—Å–∫...")
                self.bot.infinity_polling(
                    timeout=self.config.POLLING_TIMEOUT,
                    long_polling_timeout=self.config.POLLING_INTERVAL
                )
                
        except KeyboardInterrupt:
            logger.info("‚è∏Ô∏è –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –æ—Å—Ç–∞–Ω–æ–≤–∫–∏...")
            self.shutdown()
        except Exception as e:
            logger.error(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
            self.shutdown()
    
    def shutdown(self):
        """–ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞"""
        logger.info("üõë –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞...")
        
        try:
            # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ keep-alive
            if self.keepalive_manager:
                self.keepalive_manager.stop()
            
            # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ webhook —Å–µ—Ä–≤–µ—Ä–∞
            if self.webhook_server:
                self.webhook_server.stop()
            
            # –ü–õ–ê–ù 4: –û—Å—Ç–∞–Ω–æ–≤–∫–∞ backup –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ (–ó–ê–ì–õ–£–®–ö–ê)
            # if self.backup_scheduler:
            #     self.backup_scheduler.stop()
            
            # –ó–∞–∫—Ä—ã—Ç–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π —Å –ë–î
            if self.db_manager:
                self.db_manager.close()
            
            self.is_running = False
            logger.info("‚úÖ –ë–æ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∑–∞–≤–µ—Ä—à–∏–ª —Ä–∞–±–æ—Ç—É")
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏: {e}")


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞"""
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
    setup_logging()
    
    logger.info("=" * 50)
    logger.info("üéµ Do Presave Reminder Bot v25+ Starting...")
    logger.info("üìã –ü–õ–ê–ù 1: –ë–∞–∑–æ–≤—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª (–ê–ö–¢–ò–í–ï–ù)")
    logger.info("üèÜ –ü–õ–ê–ù 2: –°–∏—Å—Ç–µ–º–∞ –∫–∞—Ä–º—ã (–ó–ê–ì–õ–£–®–ö–ò)")
    logger.info("ü§ñ –ü–õ–ê–ù 3: –ò–ò –∏ —Ñ–æ—Ä–º—ã (–ó–ê–ì–õ–£–®–ö–ò)")
    logger.info("üíæ –ü–õ–ê–ù 4: Backup —Å–∏—Å—Ç–µ–º–∞ (–ó–ê–ì–õ–£–®–ö–ò)")
    logger.info("=" * 50)
    
    try:
        # –°–æ–∑–¥–∞–Ω–∏–µ –∏ –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞
        bot = PresaveBot()
        bot.initialize()
        bot.run()
        
    except Exception as e:
        logger.error(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: {e}")
        sys.exit(1)


if __name__ == "__main__":
    main()
