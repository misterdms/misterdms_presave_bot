#!/usr/bin/env python3
"""
Do Presave Reminder Bot v25+ - –ì–ª–∞–≤–Ω—ã–π —Ñ–∞–π–ª –∑–∞–ø—É—Å–∫–∞
–ú–æ–¥—É–ª—å–Ω–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ —Å –ø–æ—ç—Ç–∞–ø–Ω—ã–º —Ä–∞–∑–≤–∏—Ç–∏–µ–º —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞

–ü–õ–ê–ù 1: –ë–∞–∑–æ–≤—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª (–ê–ö–¢–ò–í–ï–ù) ‚úÖ
–ü–õ–ê–ù 2: –°–∏—Å—Ç–µ–º–∞ –∫–∞—Ä–º—ã (–ó–ê–ì–õ–£–®–ö–ò + –ö–û–ú–ú–ï–ù–¢–ê–†–ò–ò) üöß
–ü–õ–ê–ù 3: –ò–ò –∏ —Ñ–æ—Ä–º—ã (–ó–ê–ì–õ–£–®–ö–ò + –ö–û–ú–ú–ï–ù–¢–ê–†–ò–ò) üöß
–ü–õ–ê–ù 4: Backup —Å–∏—Å—Ç–µ–º–∞ (–ó–ê–ì–õ–£–®–ö–ò + –ö–û–ú–ú–ï–ù–¢–ê–†–ò–ò) üöß
"""

import os
import sys
import time
import threading
from typing import Optional

# ============================================
# –ò–ú–ü–û–†–¢–´ –ü–õ–ê–ù 1 (–ê–ö–¢–ò–í–ù–´–ï) ‚úÖ
# ============================================
import telebot
from telebot.types import Message, CallbackQuery

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∏ —É—Ç–∏–ª–∏—Ç—ã
from config import Config, validate_config
from utils.logger import get_logger, setup_logging
from utils.security import SecurityManager
from utils.helpers import format_user_mention

# –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
from database.manager import DatabaseManager
from database.models import init_database_models

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –ü–õ–ê–ù 1 (–ê–ö–¢–ò–í–ù–´–ï)
from handlers.menu import MenuHandler
from handlers.commands import CommandHandler  
from handlers.callbacks import CallbackHandler
from handlers.messages import MessageHandler
from handlers.links import LinkHandler

# HTTP —Å–µ—Ä–≤–µ—Ä –∏ keep-alive
from webhooks.server import WebhookServer
from webhooks.keepalive import KeepAliveManager

# ============================================
# –ò–ú–ü–û–†–¢–´ –ü–õ–ê–ù 2: –°–∏—Å—Ç–µ–º–∞ –∫–∞—Ä–º—ã (–ó–ê–ì–õ–£–®–ö–ò)
# ============================================
# TODO –ü–õ–ê–ù 2: –†–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–≥–¥–∞ –±—É–¥–µ–º —Ä–µ–∞–ª–∏–∑–æ–≤—ã–≤–∞—Ç—å –∫–∞—Ä–º—É
# from services.karma_manager import KarmaManager, init_karma_system
# from database.analytics import AnalyticsManager
# from handlers.karma_handlers import KarmaHandler
# from services.karma_calculator import KarmaCalculator
# from services.ranking_system import RankingSystem

# ============================================
# –ò–ú–ü–û–†–¢–´ –ü–õ–ê–ù 3: –ò–ò –∏ —Ñ–æ—Ä–º—ã (–ó–ê–ì–õ–£–®–ö–ò)
# ============================================
# TODO –ü–õ–ê–ù 3: –†–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–≥–¥–∞ –±—É–¥–µ–º —Ä–µ–∞–ª–∏–∑–æ–≤—ã–≤–∞—Ç—å –ò–ò
# from services.ai_manager import AIManager, init_ai_system
# from services.gratitude_detector import GratitudeDetector, init_gratitude_system
# from services.forms_manager import FormManager, init_forms_system
# from handlers.ai_handlers import AIHandler
# from handlers.form_handlers import FormHandler
# from services.openai_integration import OpenAIConnector
# from services.anthropic_integration import AnthropicConnector

# ============================================
# –ò–ú–ü–û–†–¢–´ –ü–õ–ê–ù 4: Backup —Å–∏—Å—Ç–µ–º–∞ (–ó–ê–ì–õ–£–®–ö–ò)
# ============================================
# TODO –ü–õ–ê–ù 4: –†–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–≥–¥–∞ –±—É–¥–µ–º —Ä–µ–∞–ª–∏–∑–æ–≤—ã–≤–∞—Ç—å backup
# from services.backup_restore import BackupRestoreManager, init_backup_manager
# from services.backup_scheduler import BackupScheduler, init_backup_scheduler
# from handlers.backup_commands import BackupCommandHandler
# from services.database_migration import DatabaseMigrator
# from services.backup_compression import BackupCompressor

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logger = get_logger(__name__)

class PresaveBot:
    """–û—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞—Å—Å –±–æ—Ç–∞ —Å –º–æ–¥—É–ª—å–Ω–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–æ–π"""
    
    def __init__(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞"""
        self.bot: Optional[telebot.TeleBot] = None
        self.config: Optional[Config] = None
        self.db_manager: Optional[DatabaseManager] = None
        
        # ============================================
        # –ü–õ–ê–ù 1: –ú–µ–Ω–µ–¥–∂–µ—Ä—ã –º–æ–¥—É–ª–µ–π (–ê–ö–¢–ò–í–ù–´–ï) ‚úÖ
        # ============================================
        self.security_manager: Optional[SecurityManager] = None
        self.menu_handler: Optional[MenuHandler] = None
        self.command_handler: Optional[CommandHandler] = None
        self.callback_handler: Optional[CallbackHandler] = None
        self.message_handler: Optional[MessageHandler] = None
        self.link_handler: Optional[LinkHandler] = None
        
        # HTTP —Å–µ—Ä–≤–µ—Ä –∏ keep-alive
        self.webhook_server: Optional[WebhookServer] = None
        self.keepalive_manager: Optional[KeepAliveManager] = None
        
        # ============================================
        # –ü–õ–ê–ù 2: –°–∏—Å—Ç–µ–º–∞ –∫–∞—Ä–º—ã (–ó–ê–ì–õ–£–®–ö–ò) üöß
        # ============================================
        # TODO –ü–õ–ê–ù 2: –†–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å
        # self.karma_manager: Optional[KarmaManager] = None
        # self.analytics_manager: Optional[AnalyticsManager] = None
        # self.karma_handler: Optional[KarmaHandler] = None
        # self.karma_calculator: Optional[KarmaCalculator] = None
        # self.ranking_system: Optional[RankingSystem] = None
        
        # ============================================
        # –ü–õ–ê–ù 3: –ò–ò –∏ —Ñ–æ—Ä–º—ã (–ó–ê–ì–õ–£–®–ö–ò) üöß
        # ============================================
        # TODO –ü–õ–ê–ù 3: –†–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å
        # self.ai_manager: Optional[AIManager] = None
        # self.gratitude_detector: Optional[GratitudeDetector] = None
        # self.form_manager: Optional[FormManager] = None
        # self.ai_handler: Optional[AIHandler] = None
        # self.form_handler: Optional[FormHandler] = None
        # self.openai_connector: Optional[OpenAIConnector] = None
        # self.anthropic_connector: Optional[AnthropicConnector] = None
        
        # ============================================
        # –ü–õ–ê–ù 4: Backup —Å–∏—Å—Ç–µ–º–∞ (–ó–ê–ì–õ–£–®–ö–ò) üöß
        # ============================================
        # TODO –ü–õ–ê–ù 4: –†–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å
        # self.backup_manager: Optional[BackupRestoreManager] = None
        # self.backup_scheduler: Optional[BackupScheduler] = None
        # self.backup_handler: Optional[BackupCommandHandler] = None
        # self.database_migrator: Optional[DatabaseMigrator] = None
        # self.backup_compressor: Optional[BackupCompressor] = None
        
        self.is_running = False
        
        logger.info("ü§ñ PresaveBot –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
        
    def initialize(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –±–æ—Ç–∞"""
        logger.info("üöÄ –ù–∞—á–∏–Ω–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é Do Presave Reminder Bot v25+...")
        
        try:
            # 1. –ó–∞–≥—Ä—É–∑–∫–∞ –∏ –≤–∞–ª–∏–¥–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
            self._init_config()
            
            # 2. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
            self._init_bot()
            
            # 3. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
            self._init_database()
            
            # 4. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
            self._init_security()
            
            # 5. ‚úÖ –ü–õ–ê–ù 1: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ—Å–Ω–æ–≤–Ω—ã—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ (–ê–ö–¢–ò–í–ù–û)
            self._init_plan1_handlers()
            
            # 6. üöß –ü–õ–ê–ù 2: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –∫–∞—Ä–º—ã (–ó–ê–ì–õ–£–®–ö–ò)
            self._init_plan2_karma_stub()
            
            # 7. üöß –ü–õ–ê–ù 3: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ò–ò –∏ —Ñ–æ—Ä–º (–ó–ê–ì–õ–£–®–ö–ò)
            self._init_plan3_ai_forms_stub()
            
            # 8. üöß –ü–õ–ê–ù 4: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è backup —Å–∏—Å—Ç–µ–º—ã (–ó–ê–ì–õ–£–®–ö–ò)
            self._init_plan4_backup_stub()
            
            # 9. üîó –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –ò–ù–¢–ï–ì–†–ê–¶–ò–Ø: LinkHandler —Å MessageHandler
            self._integrate_link_handler()
            
            # 10. –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
            self._register_handlers()
            
            # 11. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è HTTP —Å–µ—Ä–≤–µ—Ä–∞ –∏ keep-alive
            self._init_webhook_keepalive()
            
            logger.info("‚úÖ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
            self.is_running = True
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏: {e}")
            sys.exit(1)
    
    def _init_config(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
        logger.info("üîß –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...")
        
        self.config = Config()
        
        # –í–∞–ª–∏–¥–∞—Ü–∏—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
        if not validate_config():
            logger.error("‚ùå –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–µ –ø—Ä–æ—à–ª–∞ –≤–∞–ª–∏–¥–∞—Ü–∏—é!")
            sys.exit(1)
            
        logger.info("‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞ –∏ –≤–∞–ª–∏–¥–∏—Ä–æ–≤–∞–Ω–∞")
    
    def _init_bot(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram –±–æ—Ç–∞"""
        logger.info("ü§ñ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram –±–æ—Ç–∞...")
        
        self.bot = telebot.TeleBot(
            self.config.BOT_TOKEN,
            parse_mode='HTML',
            threaded=True
        )
        
        logger.info("‚úÖ Telegram –±–æ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
    
    def _init_database(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
        logger.info("üóÉÔ∏è –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
        
        self.db_manager = DatabaseManager(self.config.DATABASE_URL)
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥–µ–ª–µ–π –ë–î
        init_database_models(self.db_manager.engine)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–ª–∞–≥ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏—è
        force_recreate = getattr(self.config, 'FORCE_RECREATE_TABLES', False)
        if force_recreate:
            logger.warning("üö® –û–ë–ù–ê–†–£–ñ–ï–ù –§–õ–ê–ì FORCE_RECREATE_TABLES=true")
            logger.warning("üö® –í–°–ï –î–ê–ù–ù–´–ï –í –ë–î –ë–£–î–£–¢ –£–î–ê–õ–ï–ù–´!")
        
        # –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü —Å —É—á–µ—Ç–æ–º —Ñ–ª–∞–≥–∞
        self.db_manager.create_tables(force_recreate=force_recreate)
        
        logger.info("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")

    def _init_security(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏"""
        logger.info("üõ°Ô∏è –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏...")
        
        self.security_manager = SecurityManager(
            admin_ids=self.config.ADMIN_IDS,
            whitelist_threads=self.config.WHITELIST
        )
        
        logger.info("‚úÖ –°–∏—Å—Ç–µ–º–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
    
    # ============================================
    # ‚úÖ –ü–õ–ê–ù 1: –ê–ö–¢–ò–í–ù–´–ï –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò
    # ============================================
    
    def _init_plan1_handlers(self):
        """‚úÖ –ü–õ–ê–ù 1: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ—Å–Ω–æ–≤–Ω—ã—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ (–ê–ö–¢–ò–í–ù–û)"""
        logger.info("üì± ‚úÖ –ü–õ–ê–ù 1: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ—Å–Ω–æ–≤–Ω—ã—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤...")
        
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –º–µ–Ω—é
        self.menu_handler = MenuHandler(self.bot, self.db_manager, self.security_manager)
        
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥
        self.command_handler = CommandHandler(self.bot, self.db_manager, self.security_manager)
        
        # –°–æ–∑–¥–∞–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ menu_handler –≤ –±–æ—Ç–µ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∏–∑ CommandHandler
        self.bot._menu_handler = self.menu_handler
        
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback'–æ–≤ (–∫–Ω–æ–ø–∫–∏)
        self.callback_handler = CallbackHandler(self.bot, self.db_manager, self.security_manager)
        
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π
        self.message_handler = MessageHandler(self.bot, self.db_manager, self.security_manager)
        
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å—Å—ã–ª–æ–∫
        self.link_handler = LinkHandler(self.bot, self.db_manager, self.security_manager, self.config)
        
        logger.info("‚úÖ –ü–õ–ê–ù 1: –û—Å–Ω–æ–≤–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã")
    
    def _integrate_link_handler(self):
        """üîó –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –ò–ù–¢–ï–ì–†–ê–¶–ò–Ø: LinkHandler —Å MessageHandler"""
        logger.info("üîó –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –ò–ù–¢–ï–ì–†–ê–¶–ò–Ø: LinkHandler —Å MessageHandler...")
        
        try:
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º LinkHandler –≤ MessageHandler
            self.message_handler.set_link_handler(self.link_handler)
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é
            integration_status = self.message_handler.get_integration_status()
            logger.info(f"üîó –°—Ç–∞—Ç—É—Å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ LinkHandler: {integration_status}")
            
            if not integration_status['status'] == 'ready':
                raise Exception("LinkHandler –Ω–µ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
            
            logger.info("‚úÖ –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –ò–ù–¢–ï–ì–†–ê–¶–ò–Ø: LinkHandler —É—Å–ø–µ—à–Ω–æ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω!")
            
        except Exception as e:
            logger.error(f"‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ LinkHandler: {e}")
            raise
    
    # ============================================
    # üöß –ü–õ–ê–ù 2: –ó–ê–ì–õ–£–®–ö–ò –°–ò–°–¢–ï–ú–´ –ö–ê–†–ú–´
    # ============================================
    
    def _init_plan2_karma_stub(self):
        """üöß –ü–õ–ê–ù 2: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –∫–∞—Ä–º—ã (–ó–ê–ì–õ–£–®–ö–ê)"""
        logger.info("üöß –ü–õ–ê–ù 2: –ó–∞–≥–ª—É—à–∫–∞ —Å–∏—Å—Ç–µ–º—ã –∫–∞—Ä–º—ã...")
        
        # TODO –ü–õ–ê–ù 2: –†–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–≥–¥–∞ –±—É–¥–µ–º —Ä–µ–∞–ª–∏–∑–æ–≤—ã–≤–∞—Ç—å
        # if not getattr(self.config, 'ENABLE_PLAN_2_FEATURES', False):
        #     logger.info("‚è∏Ô∏è –ü–õ–ê–ù 2 (–∫–∞—Ä–º–∞) –æ—Ç–∫–ª—é—á–µ–Ω —á–µ—Ä–µ–∑ feature flag")
        #     return
        #     
        # logger.info("üèÜ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –∫–∞—Ä–º—ã –ü–õ–ê–ù 2...")
        # 
        # # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∫–∞—Ä–º—ã
        # self.karma_manager = KarmaManager(self.db_manager, self.config)
        # init_karma_system(self.karma_manager)
        # 
        # # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
        # self.analytics_manager = AnalyticsManager(self.db_manager)
        # 
        # # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –∫–∞—Ä–º—ã
        # self.karma_handler = KarmaHandler(self.bot, self.karma_manager, self.security_manager)
        # 
        # # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞ –∫–∞—Ä–º—ã
        # self.karma_calculator = KarmaCalculator(self.db_manager)
        # 
        # # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã —Ä–∞–Ω–≥–æ–≤
        # self.ranking_system = RankingSystem(self.db_manager, self.karma_calculator)
        # 
        # logger.info("‚úÖ –°–∏—Å—Ç–µ–º–∞ –∫–∞—Ä–º—ã –ü–õ–ê–ù 2 –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
        
        logger.info("‚è∏Ô∏è –ü–õ–ê–ù 2: –ó–∞–≥–ª—É—à–∫–∞ - –∫–∞—Ä–º–∞ –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ –ø–æ–∑–∂–µ")
    
    # ============================================
    # üöß –ü–õ–ê–ù 3: –ó–ê–ì–õ–£–®–ö–ò –ò–ò –ò –§–û–†–ú
    # ============================================
    
    def _init_plan3_ai_forms_stub(self):
        """üöß –ü–õ–ê–ù 3: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ò–ò –∏ —Ñ–æ—Ä–º (–ó–ê–ì–õ–£–®–ö–ê)"""
        logger.info("üöß –ü–õ–ê–ù 3: –ó–∞–≥–ª—É—à–∫–∞ –ò–ò –∏ —Ñ–æ—Ä–º...")
        
        # TODO –ü–õ–ê–ù 3: –†–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–≥–¥–∞ –±—É–¥–µ–º —Ä–µ–∞–ª–∏–∑–æ–≤—ã–≤–∞—Ç—å
        # if not getattr(self.config, 'ENABLE_PLAN_3_FEATURES', False):
        #     logger.info("‚è∏Ô∏è –ü–õ–ê–ù 3 (–ò–ò + —Ñ–æ—Ä–º—ã) –æ—Ç–∫–ª—é—á–µ–Ω —á–µ—Ä–µ–∑ feature flag")
        #     return
        #     
        # logger.info("ü§ñ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ò–ò –∏ —Ñ–æ—Ä–º –ü–õ–ê–ù 3...")
        # 
        # # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ò–ò
        # if getattr(self.config, 'AI_ENABLED', False):
        #     self.ai_manager = AIManager(self.config)
        #     init_ai_system(self.ai_manager)
        #     
        #     # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –ò–ò
        #     self.ai_handler = AIHandler(self.bot, self.ai_manager, self.security_manager)
        #     
        #     # –ö–æ–Ω–Ω–µ–∫—Ç–æ—Ä—ã –∫ –ò–ò —Å–µ—Ä–≤–∏—Å–∞–º
        #     if self.config.OPENAI_API_KEY and self.config.OPENAI_API_KEY != 'not_specified_yet':
        #         self.openai_connector = OpenAIConnector(self.config.OPENAI_API_KEY)
        #     
        #     if self.config.ANTHROPIC_API_KEY and self.config.ANTHROPIC_API_KEY != 'not_specified_yet':
        #         self.anthropic_connector = AnthropicConnector(self.config.ANTHROPIC_API_KEY)
        # 
        # # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–µ—Ç–µ–∫—Ç–æ—Ä–∞ –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–µ–π
        # if getattr(self.config, 'AUTO_KARMA_ENABLED', False):
        #     self.gratitude_detector = GratitudeDetector(self.db_manager, self.karma_manager)
        #     init_gratitude_system(self.gratitude_detector)
        # 
        # # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã —Ñ–æ—Ä–º
        # if getattr(self.config, 'FORMS_ENABLED', False):
        #     self.form_manager = FormManager(self.db_manager, self.config)
        #     init_forms_system(self.form_manager)
        #     
        #     # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Ñ–æ—Ä–º
        #     self.form_handler = FormHandler(self.bot, self.form_manager, self.security_manager)
        # 
        # logger.info("‚úÖ –ò–ò –∏ —Ñ–æ—Ä–º—ã –ü–õ–ê–ù 3 –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã")
        
        logger.info("‚è∏Ô∏è –ü–õ–ê–ù 3: –ó–∞–≥–ª—É—à–∫–∞ - –ò–ò –∏ —Ñ–æ—Ä–º—ã –±—É–¥—É—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω—ã –ø–æ–∑–∂–µ")
    
    # ============================================
    # üöß –ü–õ–ê–ù 4: –ó–ê–ì–õ–£–®–ö–ò BACKUP –°–ò–°–¢–ï–ú–´
    # ============================================
    
    def _init_plan4_backup_stub(self):
        """üöß –ü–õ–ê–ù 4: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è backup —Å–∏—Å—Ç–µ–º—ã (–ó–ê–ì–õ–£–®–ö–ê)"""
        logger.info("üöß –ü–õ–ê–ù 4: –ó–∞–≥–ª—É—à–∫–∞ backup —Å–∏—Å—Ç–µ–º—ã...")
        
        # TODO –ü–õ–ê–ù 4: –†–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–≥–¥–∞ –±—É–¥–µ–º —Ä–µ–∞–ª–∏–∑–æ–≤—ã–≤–∞—Ç—å
        # if not getattr(self.config, 'ENABLE_PLAN_4_FEATURES', False):
        #     logger.info("‚è∏Ô∏è –ü–õ–ê–ù 4 (backup) –æ—Ç–∫–ª—é—á–µ–Ω —á–µ—Ä–µ–∑ feature flag")
        #     return
        #     
        # logger.info("üíæ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è backup —Å–∏—Å—Ç–µ–º—ã –ü–õ–ê–ù 4...")
        # 
        # # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞ backup
        # self.backup_manager = BackupRestoreManager(self.db_manager, self.config)
        # init_backup_manager(self.backup_manager)
        # 
        # # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞
        # if getattr(self.config, 'AUTO_BACKUP_ENABLED', False):
        #     self.backup_scheduler = BackupScheduler(self.bot, self.backup_manager, self.config)
        #     init_backup_scheduler(self.backup_scheduler)
        # 
        # # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ backup –∫–æ–º–∞–Ω–¥
        # self.backup_handler = BackupCommandHandler(self.bot, self.backup_manager, self.security_manager)
        # 
        # # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–º–ø—Ä–µ—Å—Å–æ—Ä–∞ backup
        # self.backup_compressor = BackupCompressor(self.config)
        # 
        # # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–∏–≥—Ä–∞—Ç–æ—Ä–∞ –ë–î
        # self.database_migrator = DatabaseMigrator(self.db_manager, self.backup_manager)
        # 
        # logger.info("‚úÖ Backup —Å–∏—Å—Ç–µ–º–∞ –ü–õ–ê–ù 4 –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
        
        logger.info("‚è∏Ô∏è –ü–õ–ê–ù 4: –ó–∞–≥–ª—É—à–∫–∞ - backup —Å–∏—Å—Ç–µ–º–∞ –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ –ø–æ–∑–∂–µ")
    
    # ============================================
    # –†–ï–ì–ò–°–¢–†–ê–¶–ò–Ø –û–ë–†–ê–ë–û–¢–ß–ò–ö–û–í
    # ============================================
    
    def _register_handlers(self):
        """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤—Å–µ—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤"""
        logger.info("üìù –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–æ–±—â–µ–Ω–∏–π...")
        
        # ‚úÖ –ü–õ–ê–ù 1: –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ—Å–Ω–æ–≤–Ω—ã—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ (–ê–ö–¢–ò–í–ù–´–ï)
        self.command_handler.register_handlers()
        self.callback_handler.register_handlers()
        self.message_handler.register_handlers()
        
        # üöß –ü–õ–ê–ù 2: –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–∞—Ä–º—ã (–ó–ê–ì–õ–£–®–ö–ò)
        # TODO –ü–õ–ê–ù 2: –†–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å
        # if hasattr(self, 'karma_handler') and self.karma_handler:
        #     self.karma_handler.register_handlers()
        #     logger.info("‚úÖ –ü–õ–ê–ù 2: –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–∞—Ä–º—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã")
        
        # üöß –ü–õ–ê–ù 3: –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ò–ò –∏ —Ñ–æ—Ä–º (–ó–ê–ì–õ–£–®–ö–ò)  
        # TODO –ü–õ–ê–ù 3: –†–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å
        # if hasattr(self, 'ai_handler') and self.ai_handler:
        #     self.ai_handler.register_handlers()
        #     logger.info("‚úÖ –ü–õ–ê–ù 3: –ò–ò –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã")
        # 
        # if hasattr(self, 'form_handler') and self.form_handler:
        #     self.form_handler.register_handlers()
        #     logger.info("‚úÖ –ü–õ–ê–ù 3: –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Ñ–æ—Ä–º –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã")
        
        # üöß –ü–õ–ê–ù 4: –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è backup –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ (–ó–ê–ì–õ–£–®–ö–ò)
        # TODO –ü–õ–ê–ù 4: –†–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å
        # if hasattr(self, 'backup_handler') and self.backup_handler:
        #     self.backup_handler.register_handlers()
        #     logger.info("‚úÖ –ü–õ–ê–ù 4: Backup –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã")
        
        logger.info("‚úÖ –í—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã")
    
    def _init_webhook_keepalive(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è HTTP —Å–µ—Ä–≤–µ—Ä–∞ –∏ keep-alive"""
        logger.info("üåê –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è webhook —Å–µ—Ä–≤–µ—Ä–∞ –∏ keep-alive...")
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è keep-alive –º–µ–Ω–µ–¥–∂–µ—Ä–∞
        self.keepalive_manager = KeepAliveManager(
            external_url=self.config.RENDER_EXTERNAL_URL,
            interval=self.config.KEEPALIVE_INTERVAL
        )
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è webhook —Å–µ—Ä–≤–µ—Ä–∞
        if self.config.RENDER_EXTERNAL_URL:
            self.webhook_server = WebhookServer(
                bot=self.bot,
                webhook_secret=self.config.WEBHOOK_SECRET,
                host=self.config.HOST,
                port=int(os.getenv('PORT', 8080))
            )
            
            # –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
            server_thread = threading.Thread(
                target=self.webhook_server.start_server,
                daemon=True
            )
            server_thread.start()
            
            # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞
            logger.info("‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ HTTP —Å–µ—Ä–≤–µ—Ä–∞...")
            time.sleep(5)
            
            # –¢–µ–ø–µ—Ä—å —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º webhook
            try:
                # –£–±–∏—Ä–∞–µ–º https:// –µ—Å–ª–∏ —É–∂–µ –µ—Å—Ç—å –≤ RENDER_EXTERNAL_URL
                external_url = self.config.RENDER_EXTERNAL_URL.replace('https://', '').replace('http://', '')
                webhook_url = f"https://{external_url}/webhook"
                logger.info(f"üîó –£—Å—Ç–∞–Ω–æ–≤–∫–∞ webhook: {webhook_url}")
                
                # –í–ê–ñ–ù–û: –°–Ω–∞—á–∞–ª–∞ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —É–¥–∞–ª—è–µ–º webhook –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è 409 –æ—à–∏–±–∫–∏
                try:
                    self.bot.remove_webhook()
                    logger.info("‚úÖ –°—Ç–∞—Ä—ã–π webhook —É–¥–∞–ª–µ–Ω")
                    time.sleep(3)  # –î–∞–µ–º Telegram –≤—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å
                except Exception as webhook_remove_error:
                    logger.warning(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è webhook: {webhook_remove_error}")
                
                # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤—ã–π webhook
                self.bot.set_webhook(webhook_url)
                logger.info(f"‚úÖ Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ: {webhook_url}")
                
            except Exception as e:
                logger.error(f"‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ webhook: {e}")
                logger.info("üîÑ –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ polling —Ä–µ–∂–∏–º...")
                self.config.RENDER_EXTERNAL_URL = None  # –û—Ç–∫–ª—é—á–∞–µ–º webhook
        else:
            logger.info("‚úÖ –†–µ–∂–∏–º polling (–±–µ–∑ webhook)")
            
        # –ó–∞–ø—É—Å–∫ keep-alive –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
        keepalive_thread = threading.Thread(
            target=self.keepalive_manager.start_keepalive,
            daemon=True
        )
        keepalive_thread.start()
        
        logger.info("‚úÖ Webhook —Å–µ—Ä–≤–µ—Ä –∏ keep-alive –∑–∞–ø—É—â–µ–Ω—ã")
    
    def run(self):
        """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
        if not self.is_running:
            logger.error("‚ùå –ë–æ—Ç –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω!")
            return
            
        logger.info("üöÄ –ó–∞–ø—É—Å–∫ Do Presave Reminder Bot v25+...")
        
        try:
            if self.config.RENDER_EXTERNAL_URL:
                # –†–µ–∂–∏–º webhook - –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª
                logger.info("üåê –†–µ–∂–∏–º webhook - –æ–∂–∏–¥–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π...")
                while True:
                    time.sleep(1)
            else:
                # –†–µ–∂–∏–º polling
                logger.info("üì° –†–µ–∂–∏–º polling - –∑–∞–ø—É—Å–∫...")
                self.bot.infinity_polling(
                    timeout=self.config.POLLING_TIMEOUT,
                    long_polling_timeout=self.config.POLLING_INTERVAL
                )
                
        except KeyboardInterrupt:
            logger.info("‚è∏Ô∏è –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –æ—Å—Ç–∞–Ω–æ–≤–∫–∏...")
            self.shutdown()
        except Exception as e:
            logger.error(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
            self.shutdown()
    
    def shutdown(self):
        """–ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞"""
        logger.info("üõë –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞...")
        
        try:
            # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ keep-alive
            if self.keepalive_manager:
                self.keepalive_manager.stop()
            
            # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ webhook —Å–µ—Ä–≤–µ—Ä–∞
            if self.webhook_server:
                self.webhook_server.stop()
            
            # üöß –ü–õ–ê–ù 4: –û—Å—Ç–∞–Ω–æ–≤–∫–∞ backup –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ (–ó–ê–ì–õ–£–®–ö–ê)
            # TODO –ü–õ–ê–ù 4: –†–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å
            # if hasattr(self, 'backup_scheduler') and self.backup_scheduler:
            #     self.backup_scheduler.stop()
            #     logger.info("‚úÖ Backup –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
            
            # –ó–∞–∫—Ä—ã—Ç–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π —Å –ë–î
            if self.db_manager:
                self.db_manager.close()
            
            self.is_running = False
            logger.info("‚úÖ –ë–æ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∑–∞–≤–µ—Ä—à–∏–ª —Ä–∞–±–æ—Ç—É")
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏: {e}")


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞"""
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
    setup_logging()
    
    logger.info("=" * 60)
    logger.info("üéµ Do Presave Reminder Bot v25+ Starting...")
    logger.info("=" * 60)
    logger.info("‚úÖ –ü–õ–ê–ù 1: –ë–∞–∑–æ–≤—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª (–ê–ö–¢–ò–í–ï–ù)")
    logger.info("üöß –ü–õ–ê–ù 2: –°–∏—Å—Ç–µ–º–∞ –∫–∞—Ä–º—ã (–ó–ê–ì–õ–£–®–ö–ò + –ö–û–ú–ú–ï–ù–¢–ê–†–ò–ò)")
    logger.info("üöß –ü–õ–ê–ù 3: –ò–ò –∏ —Ñ–æ—Ä–º—ã (–ó–ê–ì–õ–£–®–ö–ò + –ö–û–ú–ú–ï–ù–¢–ê–†–ò–ò)")
    logger.info("üöß –ü–õ–ê–ù 4: Backup —Å–∏—Å—Ç–µ–º–∞ (–ó–ê–ì–õ–£–®–ö–ò + –ö–û–ú–ú–ï–ù–¢–ê–†–ò–ò)")
    logger.info("=" * 60)
    
    try:
        # –°–æ–∑–¥–∞–Ω–∏–µ –∏ –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞
        bot = PresaveBot()
        bot.initialize()
        
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º
        logger.info("üîç –§–∏–Ω–∞–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º:")
        logger.info(f"‚úÖ Bot: {bot.bot is not None}")
        logger.info(f"‚úÖ Database: {bot.db_manager is not None}")
        logger.info(f"‚úÖ Security: {bot.security_manager is not None}")
        logger.info(f"‚úÖ Menu Handler: {bot.menu_handler is not None}")
        logger.info(f"‚úÖ Message Handler: {bot.message_handler is not None}")
        logger.info(f"‚úÖ Link Handler: {bot.link_handler is not None}")
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ LinkHandler
        if bot.message_handler and bot.link_handler:
            integration_status = bot.message_handler.get_integration_status()
            logger.info(f"üîó LinkHandler –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è: {integration_status['status']}")
        
        logger.info("üöÄ –í—Å–µ —Å–∏—Å—Ç–µ–º—ã –≥–æ—Ç–æ–≤—ã - –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞!")
        bot.run()
        
    except Exception as e:
        logger.error(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: {e}")
        sys.exit(1)


if __name__ == "__main__":
    main()