#!/usr/bin/env python3
"""
üöÄ Do Presave Reminder Bot v25+ - –ü–õ–ê–ù 1 –¢–û–õ–¨–ö–û
–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è –±–µ–∑ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –º–æ–¥—É–ª–µ–π
"""

import os
import sys
from datetime import datetime, timezone

# –°—Ç–æ—Ä–æ–Ω–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
import telebot
import psutil

# –õ–æ–∫–∞–ª—å–Ω—ã–µ –º–æ–¥—É–ª–∏ (—Ç–æ–ª—å–∫–æ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ!)
from config import config, ConfigError
from database.manager import get_database_manager, DatabaseError
from utils.logger import get_logger, setup_logging
from utils.helpers import MessageFormatter

# HTTP —Å–µ—Ä–≤–µ—Ä
from webhooks.server import WebhookServer

# ============================================
# –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø
# ============================================

setup_logging()
logger = get_logger(__name__)

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è - —Ç–æ–ª—å–∫–æ Plan 1"""
    try:
        logger.info("üöÄ –ó–∞–ø—É—Å–∫ Do Presave Reminder Bot v25+ (Plan 1)")
        logger.info(f"üìÖ {datetime.now(timezone.utc).strftime('%Y-%m-%d %H:%M:%S UTC')}")
        logger.info(f"üåê –ü–æ—Ä—Ç: {config.PORT}")
        
        # 1. –°–æ–∑–¥–∞–Ω–∏–µ –±–æ—Ç–∞
        logger.info("ü§ñ –°–æ–∑–¥–∞–Ω–∏–µ Telegram –±–æ—Ç–∞...")
        bot = telebot.TeleBot(config.BOT_TOKEN, threaded=True)
        logger.info("‚úÖ Telegram –±–æ—Ç —Å–æ–∑–¥–∞–Ω")
        
        # 2. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ë–î
        logger.info("üóÑÔ∏è –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ PostgreSQL...")
        db = get_database_manager()
        db.init_database()
        logger.info("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≥–æ—Ç–æ–≤–∞")
        
        # 3. –ë–∞–∑–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã (—Ç–æ–ª—å–∫–æ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏)
        @bot.message_handler(commands=['start'])
        def handle_start(message):
            try:
                bot.reply_to(message, """üéµ **Do Presave Reminder Bot v25+**

‚úÖ –ü–ª–∞–Ω 1: –ë–∞–∑–æ–≤—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –∞–∫—Ç–∏–≤–µ–Ω
‚è≥ –ü–ª–∞–Ω 2-4: –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ

ü§ñ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ —Ç–µ—Å—Ç–æ–≤–æ–º —Ä–µ–∂–∏–º–µ
üìä –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥""", parse_mode='Markdown')
                logger.info(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª /start")
            except Exception as e:
                logger.error(f"‚ùå –û—à–∏–±–∫–∞ /start: {e}")
        
        @bot.message_handler(commands=['help'])
        def handle_help(message):
            try:
                bot.reply_to(message, """üìã **–î–û–°–¢–£–ü–ù–´–ï –ö–û–ú–ê–ù–î–´:**

üéØ **–û—Å–Ω–æ–≤–Ω—ã–µ:**
‚Ä¢ /start - –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
‚Ä¢ /help - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞
‚Ä¢ /status - –°—Ç–∞—Ç—É—Å –±–æ—Ç–∞

‚öôÔ∏è **–î–ª—è –∞–¥–º–∏–Ω–æ–≤:**
‚Ä¢ /admin - –ê–¥–º–∏–Ω—Å–∫–æ–µ –º–µ–Ω—é (–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)

üöÄ **–í–µ—Ä—Å–∏—è:** v25+ (–ü–ª–∞–Ω 1)
üìä **–°—Ç–∞—Ç—É—Å:** –ë–∞–∑–æ–≤—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª""", parse_mode='Markdown')
                logger.info(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª /help")
            except Exception as e:
                logger.error(f"‚ùå –û—à–∏–±–∫–∞ /help: {e}")
        
        @bot.message_handler(commands=['status'])
        def handle_status(message):
            try:
                bot.reply_to(message, f"""üìä **–°–¢–ê–¢–£–° –ë–û–¢–ê**

‚úÖ –ü–ª–∞–Ω 1: –ë–∞–∑–æ–≤—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª
‚è≥ –ü–ª–∞–Ω 2: –ö–∞—Ä–º–∞ (–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)
‚è≥ –ü–ª–∞–Ω 3: –ò–ò –∏ —Ñ–æ—Ä–º—ã (–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)  
‚è≥ –ü–ª–∞–Ω 4: Backup (–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)

üóÑÔ∏è **–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö:** PostgreSQL
üåê **–°–µ—Ä–≤–µ—Ä:** Render.com
‚è∞ **–í—Ä–µ–º—è:** {datetime.now(timezone.utc).strftime('%H:%M UTC')}""", parse_mode='Markdown')
                logger.info(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª /status")
            except Exception as e:
                logger.error(f"‚ùå –û—à–∏–±–∫–∞ /status: {e}")
        
        # 4. –°–æ–∑–¥–∞–Ω–∏–µ webhook —Å–µ—Ä–≤–µ—Ä–∞
        logger.info("üåê –°–æ–∑–¥–∞–Ω–∏–µ webhook —Å–µ—Ä–≤–µ—Ä–∞...")
        webhook_server = WebhookServer(bot)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ—Å—Ç—ã–µ endpoints
        @webhook_server.app.route('/test', methods=['GET'])
        def test_endpoint():
            return {
                'status': 'OK',
                'version': 'v25+',
                'plan': 1,
                'time': datetime.now(timezone.utc).isoformat(),
                'port': config.PORT
            }
        
        logger.info("‚úÖ Webhook —Å–µ—Ä–≤–µ—Ä –≥–æ—Ç–æ–≤")
        
        # 5. –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–æ–≤
        for admin_id in config.ADMIN_IDS:
            try:
                bot.send_message(admin_id, f"""üöÄ **Bot v25+ –∑–∞–ø—É—â–µ–Ω!**

‚úÖ –ü–ª–∞–Ω 1: –ê–∫—Ç–∏–≤–µ–Ω
üåê –ü–æ—Ä—Ç: {config.PORT}
üóÑÔ∏è –ë–î: PostgreSQL
‚è∞ {datetime.now(timezone.utc).strftime('%H:%M UTC')}

üéØ –ë–∞–∑–æ–≤—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!""", parse_mode='Markdown')
            except Exception as e:
                logger.warning(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–≤–µ–¥–æ–º–∏—Ç—å –∞–¥–º–∏–Ω–∞ {admin_id}: {e}")
        
        # 6. –ó–ê–ü–£–°–ö FLASK –°–ï–†–í–ï–†–ê
        logger.info(f"üöÄ –ó–ê–ü–£–°–ö –Ω–∞ –ø–æ—Ä—Ç—É {config.PORT}...")
        webhook_server.app.run(
            host='0.0.0.0',
            port=config.PORT,
            debug=False,
            use_reloader=False,
            threaded=True
        )
        
    except ConfigError as e:
        logger.error(f"‚öôÔ∏è –û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
        sys.exit(1)
    except Exception as e:
        logger.error(f"üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
        sys.exit(1)

if __name__ == "__main__":
    main()
