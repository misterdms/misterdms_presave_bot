#!/usr/bin/env python3
"""
Do Presave Reminder Bot v29.07 - Main Entry Point
by Mister DMS

–ú–æ–¥—É–ª—å–Ω–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –¥–ª—è –º—É–∑—ã–∫–∞–ª—å–Ω—ã—Ö —Å–æ–æ–±—â–µ—Å—Ç–≤
"""

import asyncio
import logging
import signal
import sys
from typing import Optional

from config.settings import Settings
from core.bot_instance import BotManager
from core.module_registry import ModuleRegistry
from utils.logger import setup_logger

# –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã
bot_manager: Optional[BotManager] = None
module_registry: Optional[ModuleRegistry] = None

async def setup_application() -> bool:
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    global bot_manager, module_registry
    
    try:
        logger = logging.getLogger(__name__)
        logger.info("üéµ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Do Presave Reminder Bot v29.07...")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
        settings = Settings()
        if not settings.validate():
            logger.error("‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è")
            return False
        
        logger.info(f"üöÄ –†–µ–∂–∏–º: {'DEVELOPMENT' if settings.DEVELOPMENT_MODE else 'PRODUCTION'}")
        logger.info(f"üìä WebApp URL: {settings.WEBAPP_URL}")
        
        # –°–æ–∑–¥–∞–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä –±–æ—Ç–∞
        bot_manager = BotManager(settings)
        
        # –°–æ–∑–¥–∞–µ–º —Ä–µ–µ—Å—Ç—Ä –º–æ–¥—É–ª–µ–π
        module_registry = ModuleRegistry(bot_manager)
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        if not await bot_manager.initialize_database():
            logger.error("‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö")
            return False
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –º–æ–¥—É–ª–∏ –ü–õ–ê–ù–ê 1
        plan1_modules = [
            'user_management',      # –ú–û–î–£–õ–¨ 1: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –∏ –∫–∞—Ä–º–∞
            'track_support_system', # –ú–û–î–£–õ–¨ 2: –°–∏—Å—Ç–µ–º–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ —Ç—Ä–µ–∫–æ–≤  
            'karma_system',         # –ú–û–î–£–õ–¨ 3: –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∫–∞—Ä–º–∞
            'navigation_system',    # –ú–û–î–£–õ–¨ 10: –ù–∞–≤–∏–≥–∞—Ü–∏—è
            'module_settings'       # –ú–û–î–£–õ–¨ 12: –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –º–æ–¥—É–ª–µ–π
        ]
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –º–æ–¥—É–ª–∏
        for module_name in plan1_modules:
            if not await module_registry.load_module(module_name):
                logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –º–æ–¥—É–ª—è: {module_name}")
                return False
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º WebApp –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é
        await bot_manager.setup_webapp_integration()
        
        logger.info("‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ —É—Å–ø–µ—à–Ω–æ")
        return True
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏: {e}")
        return False

async def start_bot():
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
    global bot_manager
    
    logger = logging.getLogger(__name__)
    
    try:
        if not bot_manager:
            logger.error("‚ùå BotManager –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
            return
        
        # –°—Ç–∞—Ä—Ç—É–µ–º –≤—Å–µ –º–æ–¥—É–ª–∏
        await module_registry.start_all_modules()
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º Keep-Alive –µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω
        if bot_manager.settings.KEEPALIVE_ENABLED:
            await bot_manager.start_keepalive()
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
        logger.info("üöÄ –ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞...")
        await bot_manager.start_polling()
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞: {e}")
        raise

async def shutdown_application():
    """–ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã"""
    global bot_manager, module_registry
    
    logger = logging.getLogger(__name__)
    logger.info("üõë –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã...")
    
    try:
        if module_registry:
            await module_registry.stop_all_modules()
        
        if bot_manager:
            await bot_manager.stop()
        
        logger.info("‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –≤—ã–ø–æ–ª–Ω–µ–Ω–æ")
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏: {e}")

def signal_handler(signum, frame):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–∏–≥–Ω–∞–ª–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è"""
    logger = logging.getLogger(__name__)
    logger.info(f"üì° –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª {signum}")
    
    # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π event loop –¥–ª—è shutdown
    loop = asyncio.new_event_loop()
    asyncio.set_event_loop(loop)
    
    try:
        loop.run_until_complete(shutdown_application())
    finally:
        loop.close()
    
    sys.exit(0)

async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
    setup_logger()
    logger = logging.getLogger(__name__)
    
    logger.info("üéµ Do Presave Reminder Bot v29.07 by Mister DMS")
    logger.info("üìã –ü–õ–ê–ù 1: –ë–∞–∑–æ–≤—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª + WebApp –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è")
    
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–∏–≥–Ω–∞–ª–æ–≤
    signal.signal(signal.SIGINT, signal_handler)
    signal.signal(signal.SIGTERM, signal_handler)
    
    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
        if not await setup_application():
            logger.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ")
            sys.exit(1)
        
        # –ó–∞–ø—É—Å–∫
        await start_bot()
        
    except KeyboardInterrupt:
        logger.info("‚å®Ô∏è –ü–æ–ª—É—á–µ–Ω Ctrl+C")
    except Exception as e:
        logger.error(f"üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        sys.exit(1)
    finally:
        await shutdown_application()

if __name__ == "__main__":
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ—Ä—Å–∏—é Python
    if sys.version_info < (3, 11):
        print("‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è Python 3.11 –∏–ª–∏ –≤—ã—à–µ")
        sys.exit(1)
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    try:
        asyncio.run(main())
    except Exception as e:
        print(f"üí• –§–∞—Ç–∞–ª—å–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        sys.exit(1)